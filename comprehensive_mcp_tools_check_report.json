{
  "timestamp": "/Users/wangdada/Downloads/mcp/chatExcel-mcp",
  "summary": {
    "total_tools": 31,
    "total_issues": 1,
    "critical_issues": 0,
    "high_issues": 0,
    "medium_issues": 1,
    "modules_checked": 8,
    "modules_with_errors": 0
  },
  "tools_info": {
    "read_metadata": {
      "name": "read_metadata",
      "lineno": 175,
      "args": [
        "file_path"
      ],
      "docstring": "读取CSV文件元数据并返回MCP兼容格式\n\nArgs:\n    file_path: CSV文件的绝对路径\n    \nReturns:\n    dict: 包含列信息、文件信息和状态的结构化元数据",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 174
        },
        {
          "type": "method",
          "object": "logger",
          "method": "info",
          "args_count": 1,
          "lineno": 184
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 188
        },
        {
          "type": "function",
          "name": "min",
          "args_count": 2,
          "lineno": 224
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 225
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 193
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 1,
          "lineno": 194
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 197
        },
        {
          "type": "method",
          "object": "f",
          "method": "readline",
          "args_count": 0,
          "lineno": 198
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 244
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_string_dtype"
          ],
          "args_count": 1,
          "lineno": 256
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_datetime64_any_dtype"
          ],
          "args_count": 1,
          "lineno": 262
        },
        {
          "type": "method",
          "object": "columns_metadata",
          "method": "append",
          "args_count": 1,
          "lineno": 275
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 207
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 211
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 212
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 232
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 272
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 289
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 290
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 332
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 338
        },
        {
          "type": "function",
          "name": "detect",
          "args_count": 1,
          "lineno": 195
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 237
        },
        {
          "type": "function",
          "name": "infer_dtype",
          "args_count": 1,
          "lineno": 292
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 331
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 307
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 322
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 207
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 304
        },
        {
          "type": "chained_method",
          "chain": [
            "index",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 314
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 319
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 299
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 316
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 322
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 300
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 307
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 313
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 319
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 298
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 304
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 310
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 309
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 314
        }
      ],
      "imports_used": [
        "traceback",
        "validation_result",
        "file_size",
        "col_meta",
        "sum",
        "infer_dtype",
        "df",
        "str",
        "MAX_FILE_SIZE",
        "col",
        "first_line",
        "e",
        "min",
        "delimiter",
        "detect",
        "mcp",
        "temp_df",
        "pd",
        "columns_metadata",
        "file_path",
        "_",
        "sample_size",
        "total_rows",
        "open",
        "Exception",
        "validate_file_access",
        "rawdata",
        "logger",
        "len",
        "summary",
        "f",
        "enc",
        "dict",
        "type"
      ]
    },
    "verify_data_integrity": {
      "name": "verify_data_integrity",
      "lineno": 345,
      "args": [
        "original_file",
        "processed_data",
        "comparison_file",
        "verification_type"
      ],
      "docstring": "数据完整性验证和比对核准工具。\n\nArgs:\n    original_file: 原始Excel文件路径\n    processed_data: 处理后的数据（JSON字符串格式）或文件路径\n    comparison_file: 用于比较的另一个Excel文件路径（可选）\n    verification_type: 验证类型 (\"basic\", \"detailed\", \"statistical\")\n\nReturns:\n    dict: 验证结果报告",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 344
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 362
        },
        {
          "type": "function",
          "name": "DataVerificationEngine",
          "args_count": 0,
          "lineno": 371
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 375
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 384
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 385
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "compare_dataframes",
          "args_count": 2,
          "lineno": 387
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 394
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 397
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 464
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 389
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 390
        },
        {
          "type": "method",
          "object": "comparison_result",
          "method": "get",
          "args_count": 2,
          "lineno": 416
        },
        {
          "type": "method",
          "object": "comparison_result",
          "method": "get",
          "args_count": 2,
          "lineno": 417
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 425
        },
        {
          "type": "function",
          "name": "verify_data_processing_result",
          "args_count": 3,
          "lineno": 445
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 515
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 516
        },
        {
          "type": "method",
          "object": "quality_result1",
          "method": "get",
          "args_count": 2,
          "lineno": 405
        },
        {
          "type": "method",
          "object": "quality_result2",
          "method": "get",
          "args_count": 2,
          "lineno": 405
        },
        {
          "type": "method",
          "object": "processed_data",
          "method": "endswith",
          "args_count": 1,
          "lineno": 426
        },
        {
          "type": "function",
          "name": "list",
          "args_count": 1,
          "lineno": 471
        },
        {
          "type": "chained_method",
          "chain": [
            "df",
            "dtypes",
            "to_dict"
          ],
          "args_count": 0,
          "lineno": 472
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 475
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 476
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 488
        },
        {
          "type": "method",
          "object": "col_info",
          "method": "update",
          "args_count": 1,
          "lineno": 495
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 514
        },
        {
          "type": "method",
          "object": "quality_result1",
          "method": "get",
          "args_count": 2,
          "lineno": 406
        },
        {
          "type": "method",
          "object": "quality_result2",
          "method": "get",
          "args_count": 2,
          "lineno": 406
        },
        {
          "type": "method",
          "object": "processed_data",
          "method": "endswith",
          "args_count": 1,
          "lineno": 428
        },
        {
          "type": "method",
          "object": "json",
          "method": "loads",
          "args_count": 1,
          "lineno": 435
        },
        {
          "type": "method",
          "object": "pd",
          "method": "DataFrame",
          "args_count": 1,
          "lineno": 436
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 429
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 431
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 479
        },
        {
          "type": "method",
          "object": "df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 480
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 458
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 477
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 478
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 478
        }
      ],
      "imports_used": [
        "traceback",
        "validation_result",
        "quality_result2",
        "parse_error",
        "data_quality_controller",
        "df",
        "str",
        "col",
        "os",
        "isinstance",
        "verification_result",
        "e",
        "verify_data_processing_result",
        "DataVerificationEngine",
        "json",
        "original_file",
        "col_info",
        "list",
        "verification_type",
        "mcp",
        "data_dict",
        "verifier",
        "integrity_report",
        "pd",
        "processed_df",
        "df2",
        "Exception",
        "comparison_file",
        "validate_file_access",
        "quality_result1",
        "len",
        "comparison_result",
        "df1",
        "Optional",
        "processed_data",
        "dict",
        "type",
        "validation_result2"
      ]
    },
    "read_excel_metadata": {
      "name": "read_excel_metadata",
      "lineno": 522,
      "args": [
        "file_path"
      ],
      "docstring": "增强版Excel文件元数据读取，支持智能编码检测和完整性验证。\n\nArgs:\n    file_path: Excel文件路径\n\nReturns:\n    dict: 包含文件元数据、编码信息、完整性验证结果的字典",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 521
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 533
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 538
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 541
        },
        {
          "type": "function",
          "name": "validate_excel_data_integrity",
          "args_count": 2,
          "lineno": 554
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 557
        },
        {
          "type": "method",
          "object": "cell_content_extractor",
          "method": "extract_cell_content_advanced",
          "args_count": 1,
          "lineno": 562
        },
        {
          "type": "method",
          "object": "openpyxl",
          "method": "load_workbook",
          "args_count": 1,
          "lineno": 567
        },
        {
          "type": "method",
          "object": "workbook",
          "method": "close",
          "args_count": 0,
          "lineno": 578
        },
        {
          "type": "function",
          "name": "_suggest_excel_read_parameters",
          "args_count": 2,
          "lineno": 581
        },
        {
          "type": "method",
          "object": "read_params",
          "method": "get",
          "args_count": 1,
          "lineno": 581
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 597
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_string_dtype"
          ],
          "args_count": 1,
          "lineno": 607
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_datetime64_any_dtype"
          ],
          "args_count": 1,
          "lineno": 611
        },
        {
          "type": "method",
          "object": "columns_metadata",
          "method": "append",
          "args_count": 1,
          "lineno": 621
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 546
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 551
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 587
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 619
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 632
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 633
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 634
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 681
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 687
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 592
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 632
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 636
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 680
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 657
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 672
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 654
        },
        {
          "type": "chained_method",
          "chain": [
            "index",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 664
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 669
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 649
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 666
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 672
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 650
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 657
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 663
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 669
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 648
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 654
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 660
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 659
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 664
        }
      ],
      "imports_used": [
        "traceback",
        "validation_result",
        "col_meta",
        "quality_result",
        "suggested_params",
        "sum",
        "_suggest_excel_read_parameters",
        "data_quality_controller",
        "df",
        "sheet_names",
        "str",
        "sheets_info",
        "sheet_name",
        "col",
        "cell_content_extractor",
        "e",
        "detect_file_encoding",
        "mcp",
        "read_result",
        "pd",
        "columns_metadata",
        "file_path",
        "workbook",
        "openpyxl",
        "Exception",
        "validate_file_access",
        "encoding_info",
        "cell_analysis",
        "len",
        "summary",
        "smart_read_excel",
        "integrity_result",
        "validate_excel_data_integrity",
        "sheet_obj",
        "dict",
        "type",
        "read_params"
      ]
    },
    "run_excel_code": {
      "name": "run_excel_code",
      "lineno": 757,
      "args": [
        "file_path",
        "code",
        "sheet_name",
        "skiprows",
        "header",
        "usecols",
        "encoding",
        "auto_detect",
        "allow_file_write"
      ],
      "docstring": "增强版Excel代码执行工具，具备强化的pandas导入和错误处理机制。\n\nArgs:\n    code: 要执行的数据处理代码字符串\n    file_path: Excel文件路径\n    sheet_name: 可选，工作表名称\n    skiprows: 可选，跳过的行数\n    header: 可选，用作列名的行号。可以是整数、整数列表或None\n    usecols: 可选，要解析的列。可以是列名列表、列索引列表或字符串\n    encoding: 指定编码（可选，自动检测时忽略）\n    auto_detect: 是否启用智能检测和参数优化\n    allow_file_write: 是否允许在代码中写入文件\n    \nReturns:\n    dict: 执行结果或错误信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 756
        },
        {
          "type": "method",
          "object": "logger",
          "method": "debug",
          "args_count": 1,
          "lineno": 786
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 790
        },
        {
          "type": "function",
          "name": "safe_import_pandas",
          "args_count": 0,
          "lineno": 833
        },
        {
          "type": "function",
          "name": "safe_import_numpy",
          "args_count": 0,
          "lineno": 834
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "update",
          "args_count": 1,
          "lineno": 966
        },
        {
          "type": "function",
          "name": "StringIO",
          "args_count": 0,
          "lineno": 1004
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 849
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 852
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "update",
          "args_count": 1,
          "lineno": 975
        },
        {
          "type": "method",
          "object": "builtins_dict",
          "method": "update",
          "args_count": 1,
          "lineno": 996
        },
        {
          "type": "function",
          "name": "SecureCodeExecutor",
          "args_count": 0,
          "lineno": 1011
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "copy",
          "args_count": 0,
          "lineno": 1018
        },
        {
          "type": "method",
          "object": "context",
          "method": "update",
          "args_count": 1,
          "lineno": 1019
        },
        {
          "type": "method",
          "object": "secure_executor",
          "method": "execute_code",
          "args_count": 2,
          "lineno": 1022
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1025
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1059
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1081
        },
        {
          "type": "method",
          "object": "encoding_info",
          "method": "get",
          "args_count": 1,
          "lineno": 866
        },
        {
          "type": "function",
          "name": "_suggest_excel_read_parameters",
          "args_count": 1,
          "lineno": 877
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "get",
          "args_count": 2,
          "lineno": 878
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 898
        },
        {
          "type": "method",
          "object": "pd_module",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 941
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1067
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 1,
          "lineno": 1130
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1136
        },
        {
          "type": "function",
          "name": "ColumnChecker",
          "args_count": 0,
          "lineno": 1179
        },
        {
          "type": "method",
          "object": "checker",
          "method": "match_column",
          "args_count": 2,
          "lineno": 1180
        },
        {
          "type": "method",
          "object": "checker",
          "method": "generate_code_suggestions",
          "args_count": 2,
          "lineno": 1181
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1230
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 886
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 912
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 914
        },
        {
          "type": "function",
          "name": "__import__",
          "args_count": 1,
          "lineno": 977
        },
        {
          "type": "function",
          "name": "__import__",
          "args_count": 1,
          "lineno": 978
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1027
        },
        {
          "type": "method",
          "object": "data_cleaner",
          "method": "suggest_cleaning_operations",
          "args_count": 1,
          "lineno": 1039
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1051
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1052
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1053
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1054
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1055
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1075
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1084
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1123
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1124
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1140
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1148
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1154
        },
        {
          "type": "function",
          "name": "list",
          "args_count": 1,
          "lineno": 1176
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1234
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1236
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1238
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1240
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1241
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1242
        },
        {
          "type": "method",
          "object": "importlib",
          "method": "invalidate_caches",
          "args_count": 0,
          "lineno": 811
        },
        {
          "type": "method",
          "object": "importlib",
          "method": "invalidate_caches",
          "args_count": 0,
          "lineno": 826
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "get",
          "args_count": 2,
          "lineno": 881
        },
        {
          "type": "method",
          "object": "recommended_params",
          "method": "copy",
          "args_count": 0,
          "lineno": 890
        },
        {
          "type": "method",
          "object": "final_params",
          "method": "update",
          "args_count": 1,
          "lineno": 891
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 894
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 904
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 906
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 908
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 921
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1052
        },
        {
          "type": "method",
          "object": "result_copy",
          "method": "to_dict",
          "args_count": 0,
          "lineno": 1091
        },
        {
          "type": "method",
          "object": "result",
          "method": "copy",
          "args_count": 0,
          "lineno": 1095
        },
        {
          "type": "method",
          "object": "result_copy",
          "method": "to_dict",
          "args_count": 0,
          "lineno": 1098
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1099
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1108
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1139
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1147
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1163
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1164
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1173
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1220
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1221
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1248
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1249
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 807
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 823
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 904
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 1032
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 1033
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 1034
        },
        {
          "type": "chained_method",
          "chain": [
            "processed_df",
            "dtypes",
            "to_dict"
          ],
          "args_count": 0,
          "lineno": 1034
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 1035
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 1040
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1092
        },
        {
          "type": "chained_method",
          "chain": [
            "result_copy",
            "dtype",
            "name",
            "startswith"
          ],
          "args_count": 1,
          "lineno": 1096
        },
        {
          "type": "method",
          "object": "result_copy",
          "method": "astype",
          "args_count": 1,
          "lineno": 1097
        },
        {
          "type": "function",
          "name": "list",
          "args_count": 1,
          "lineno": 1104
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1119
        },
        {
          "type": "function",
          "name": "locals",
          "args_count": 0,
          "lineno": 1176
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 1246
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 903
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 920
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 0,
          "lineno": 1086
        },
        {
          "type": "chained_method",
          "chain": [
            "dtype",
            "name",
            "startswith"
          ],
          "args_count": 1,
          "lineno": 1089
        },
        {
          "type": "chained_method",
          "chain": [
            "result",
            "dtypes",
            "items"
          ],
          "args_count": 0,
          "lineno": 1092
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1103
        },
        {
          "type": "function",
          "name": "list",
          "args_count": 1,
          "lineno": 1115
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1116
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1117
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 947
        },
        {
          "type": "method",
          "object": "processed_df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 1035
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1096
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1114
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 815
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 830
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1089
        },
        {
          "type": "method",
          "object": "processed_df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1033
        }
      ],
      "imports_used": [
        "traceback",
        "validation_result",
        "pd_error",
        "StringIO",
        "SecureCodeExecutor",
        "fallback_params",
        "data_quality_controller",
        "int",
        "sheet_name",
        "suggestion",
        "isinstance",
        "checker",
        "detect_file_encoding",
        "available_columns",
        "cleaning_suggestions",
        "builtins_dict",
        "round",
        "importlib",
        "data_cleaner",
        "safe_import_numpy",
        "context",
        "logger",
        "old_stdout",
        "encoding_info",
        "getattr",
        "dict",
        "read_params",
        "execution_result",
        "smart_read_excel",
        "columns_list",
        "float",
        "df",
        "str",
        "e",
        "min",
        "global_vars",
        "read_result",
        "skiprows",
        "abs",
        "code_suggestions",
        "bool",
        "post_quality_check",
        "processed_df",
        "open",
        "auto_detect",
        "hasattr",
        "enumerate",
        "error_msg",
        "__import__",
        "pd_module",
        "KeyError",
        "sys",
        "unnamed_cols",
        "type",
        "safe_import_pandas",
        "zip",
        "print",
        "np_error",
        "header",
        "col",
        "suggestions",
        "match_result",
        "secure_executor",
        "mcp",
        "data_dict",
        "final_params",
        "file_path",
        "encoding",
        "max",
        "usecols",
        "np_module",
        "fuzzy_list",
        "is_multi_level",
        "Exception",
        "recommended_params",
        "quality_precheck",
        "ColumnChecker",
        "result",
        "stdout_capture",
        "ImportError",
        "sum",
        "normalized_list",
        "local_vars",
        "_suggest_excel_read_parameters",
        "execution_context",
        "code",
        "NameError",
        "result_copy",
        "range",
        "locals",
        "IndexError",
        "list",
        "TypeError",
        "dtype",
        "e2",
        "pd_local",
        "dtypes_dict",
        "read_info",
        "response",
        "ValueError",
        "missing_column",
        "globals",
        "variant_list",
        "validate_file_access",
        "read_kwargs",
        "np_local",
        "len",
        "allow_file_write"
      ]
    },
    "run_code": {
      "name": "run_code",
      "lineno": 1259,
      "args": [
        "code",
        "file_path"
      ],
      "docstring": "在CSV文件上执行数据处理代码，具备安全检查功能。\n\nArgs:\n    code: 要执行的数据处理代码字符串。\n    file_path: CSV文件路径。\n\nReturns:\n    dict: 执行结果，包含数据、输出或错误信息。",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1258
        },
        {
          "type": "method",
          "object": "logger",
          "method": "debug",
          "args_count": 1,
          "lineno": 1271
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 1274
        },
        {
          "type": "function",
          "name": "StringIO",
          "args_count": 0,
          "lineno": 1321
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 1285
        },
        {
          "type": "method",
          "object": "encoding_info",
          "method": "get",
          "args_count": 2,
          "lineno": 1286
        },
        {
          "type": "function",
          "name": "SecureCodeExecutor",
          "args_count": 0,
          "lineno": 1326
        },
        {
          "type": "method",
          "object": "secure_executor",
          "method": "execute_code",
          "args_count": 2,
          "lineno": 1336
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1347
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1351
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1290
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1353
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1388
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1389
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1342
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1343
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1361
        },
        {
          "type": "method",
          "object": "captured_output",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1342
        },
        {
          "type": "chained_method",
          "chain": [
            "result",
            "columns",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 1357
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1299
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1315
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1341
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1365
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1367
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1372
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 1,
          "lineno": 1358
        },
        {
          "type": "chained_method",
          "chain": [
            "result",
            "dtypes",
            "astype"
          ],
          "args_count": 1,
          "lineno": 1359
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 1371
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1308
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 1,
          "lineno": 1366
        }
      ],
      "imports_used": [
        "execution_result",
        "traceback",
        "validation_result",
        "UnicodeDecodeError",
        "StringIO",
        "SecureCodeExecutor",
        "df",
        "str",
        "code",
        "isinstance",
        "e",
        "type",
        "output",
        "detect_file_encoding",
        "secure_executor",
        "mcp",
        "pd",
        "file_path",
        "result_data",
        "captured_output",
        "context",
        "Exception",
        "last_error",
        "validate_file_access",
        "logger",
        "old_stdout",
        "common_encodings",
        "encoding_info",
        "UnicodeError",
        "len",
        "detected_encoding",
        "sys",
        "enc",
        "dict",
        "result"
      ]
    },
    "bar_chart_to_html": {
      "name": "bar_chart_to_html",
      "lineno": 1395,
      "args": [
        "categories",
        "values",
        "title"
      ],
      "docstring": "Generate interactive HTML bar chart using Chart.js template.\n\nArgs:\n    categories: List of category names for x-axis\n    values: List of numeric values for y-axis\n    title: Chart title (default: \"Interactive Chart\")\n    x_label: Label for X-axis (default: \"Categories\")\n    y_label: Label for Y-axis (default: \"Values\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> bar_chart_to_html(\n    ...     categories=['Electronics', 'Clothing', 'Home Goods', 'Sports Equipment'],\n    ...     values=[120000, 85000, 95000, 60000],\n    ...     title=\"Q1 Sales by Product Category\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1394
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1433
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1475
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1476
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1478
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1480
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1425
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1425
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1433
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1475
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1478
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1494
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1433
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1435
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1436
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1454
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1475
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1478
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1483
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1484
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1441
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1489
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1429
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1429
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1465
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1457
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1462
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1459
        }
      ],
      "imports_used": [
        "time",
        "str",
        "int",
        "os",
        "e",
        "colors",
        "json",
        "list",
        "mcp",
        "__file__",
        "filename",
        "values",
        "timestamp",
        "open",
        "filepath",
        "template_path",
        "Exception",
        "template",
        "charts_dir",
        "title",
        "all_categories",
        "categories",
        "len",
        "all_values",
        "f",
        "dict"
      ]
    },
    "pie_chart_to_html": {
      "name": "pie_chart_to_html",
      "lineno": 1499,
      "args": [
        "labels",
        "values",
        "title"
      ],
      "docstring": "Generate interactive HTML pie chart using Chart.js template.\n\nArgs:\n    labels: List of label names for each pie slice\n    values: List of numeric values for each slice\n    title: Chart title (default: \"Interactive Pie Chart\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> pie_chart_to_html(\n    ...     labels=['Electronics', 'Clothing', 'Home Goods'],\n    ...     values=[120000, 85000, 95000],\n    ...     title=\"Q1 Sales Distribution\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1498
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1534
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1571
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1572
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1574
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1576
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1526
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1526
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1534
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1571
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1574
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1590
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1534
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1536
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1537
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1553
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1571
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1574
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1579
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1580
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1542
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1585
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1530
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1530
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1564
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1556
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1561
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1558
        }
      ],
      "imports_used": [
        "time",
        "labels",
        "str",
        "int",
        "os",
        "e",
        "colors",
        "json",
        "list",
        "mcp",
        "__file__",
        "filename",
        "values",
        "timestamp",
        "open",
        "filepath",
        "template_path",
        "title",
        "Exception",
        "template",
        "charts_dir",
        "len",
        "f",
        "dict"
      ]
    },
    "line_chart_to_html": {
      "name": "line_chart_to_html",
      "lineno": 1594,
      "args": [
        "labels",
        "datasets",
        "title"
      ],
      "docstring": "Generate interactive HTML line chart using Chart.js template.\n\nArgs:\n    labels: List of label names for x-axis\n    datasets: List of datasets, each containing:\n        - label: Name of the dataset\n        - data: List of numeric values (3 dimensions: [x, y, z])\n    title: Chart title (default: \"Interactive Line Chart\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> line_chart_to_html(\n    ...     labels=['Jan', 'Feb', 'Mar'],\n    ...     datasets=[\n    ...         {'label': 'Sales', 'data': [[100, 200, 300], [150, 250, 350], [200, 300, 400]]},\n    ...         {'label': 'Expenses', 'data': [[50, 100, 150], [75, 125, 175], [100, 150, 200]]}\n    ...     ],\n    ...     title=\"Monthly Performance\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1593
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1634
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1711
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1712
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1714
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1716
        },
        {
          "type": "function",
          "name": "all",
          "args_count": 1,
          "lineno": 1626
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1634
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1711
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1714
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1730
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1634
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1636
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1637
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1711
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1714
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1719
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1720
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1642
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1725
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1626
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1626
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1665
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1701
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1667
        }
      ],
      "imports_used": [
        "time",
        "labels",
        "str",
        "int",
        "d",
        "os",
        "e",
        "json",
        "list",
        "chart_data",
        "mcp",
        "__file__",
        "filename",
        "timestamp",
        "open",
        "filepath",
        "dataset",
        "all",
        "template_path",
        "Exception",
        "title",
        "template",
        "charts_dir",
        "datasets",
        "len",
        "f",
        "dict"
      ]
    },
    "validate_data_quality": {
      "name": "validate_data_quality",
      "lineno": 1735,
      "args": [
        "file_path"
      ],
      "docstring": "验证数据质量并提供改进建议\n\nArgs:\n    file_path: 数据文件路径\n    \nReturns:\n    dict: 数据质量报告和改进建议",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1734
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 1745
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1749
        },
        {
          "type": "function",
          "name": "create_success_response",
          "args_count": 2,
          "lineno": 1783
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 1786
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1753
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1754
        },
        {
          "type": "chained_method",
          "chain": [
            "df",
            "dtypes",
            "astype"
          ],
          "args_count": 1,
          "lineno": 1766
        },
        {
          "type": "method",
          "object": "df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 1755
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 1763
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1764
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1780
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1788
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1789
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1758
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1759
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1760
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 1764
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1760
        }
      ],
      "imports_used": [
        "traceback",
        "validation_result",
        "len",
        "df",
        "quality_report",
        "mcp",
        "dtype",
        "str",
        "create_success_response",
        "col",
        "file_path",
        "pd",
        "e",
        "create_error_response",
        "Exception",
        "dict",
        "validate_file_access"
      ]
    },
    "suggest_excel_read_parameters_tool": {
      "name": "suggest_excel_read_parameters_tool",
      "lineno": 1795,
      "args": [
        "file_path"
      ],
      "docstring": "智能推荐Excel文件读取参数\n\nArgs:\n    file_path: Excel文件的绝对路径\n    \nReturns:\n    dict: 包含推荐参数的结构化响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1794
        },
        {
          "type": "function",
          "name": "suggest_excel_read_parameters",
          "args_count": 1,
          "lineno": 1804
        }
      ],
      "imports_used": [
        "mcp",
        "str",
        "suggest_excel_read_parameters",
        "file_path",
        "dict"
      ]
    },
    "detect_excel_file_structure_tool": {
      "name": "detect_excel_file_structure_tool",
      "lineno": 1807,
      "args": [
        "file_path"
      ],
      "docstring": "检测Excel文件结构\n\nArgs:\n    file_path: Excel文件的绝对路径\n    \nReturns:\n    dict: 包含文件结构信息的响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1806
        },
        {
          "type": "function",
          "name": "detect_excel_file_structure",
          "args_count": 1,
          "lineno": 1816
        }
      ],
      "imports_used": [
        "mcp",
        "str",
        "detect_excel_file_structure",
        "file_path",
        "dict"
      ]
    },
    "create_excel_read_template_tool": {
      "name": "create_excel_read_template_tool",
      "lineno": 1819,
      "args": [
        "file_path",
        "sheet_name",
        "skiprows",
        "header",
        "usecols"
      ],
      "docstring": "生成Excel读取代码模板\n\nArgs:\n    file_path: Excel文件的绝对路径\n    sheet_name: 工作表名称\n    skiprows: 跳过的行数\n    header: 标题行位置\n    usecols: 使用的列\n    \nReturns:\n    dict: 包含代码模板的响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1818
        },
        {
          "type": "function",
          "name": "create_excel_read_template",
          "args_count": 5,
          "lineno": 1832
        }
      ],
      "imports_used": [
        "usecols",
        "mcp",
        "str",
        "sheet_name",
        "skiprows",
        "header",
        "Optional",
        "int",
        "file_path",
        "create_excel_read_template",
        "dict"
      ]
    },
    "comprehensive_data_verification_tool": {
      "name": "comprehensive_data_verification_tool",
      "lineno": 1835,
      "args": [
        "file_path",
        "reference_file",
        "verification_level",
        "save_report"
      ],
      "docstring": "综合数据验证和核准工具\n\n提供全面的Excel数据验证、质量评估和比对核准功能。\n支持单文件验证和双文件比较验证模式。\n\nArgs:\n    file_path: 要验证的Excel文件路径\n    reference_file: 参考文件路径（可选，用于比较验证）\n    verification_level: 验证级别\n        - \"basic\": 基础验证（文件结构、基本统计）\n        - \"detailed\": 详细验证（包含数据质量分析）\n        - \"comprehensive\": 综合验证（包含异常检测和深度分析）\n    save_report: 是否保存验证报告到本地\n\nReturns:\n    dict: 包含以下字段的验证结果\n        - overall_status: 总体状态 (EXCELLENT/GOOD/ACCEPTABLE/POOR/CRITICAL/FAILED)\n        - data_quality_score: 数据质量得分 (0-100)\n        - file_analysis: 文件结构分析结果\n        - data_integrity: 数据完整性验证结果\n        - comparison_results: 比较验证结果（如果提供了参考文件）\n        - recommendations: 改进建议列表\n        - detailed_report: 详细报告（详细和综合级别）\n\n功能特点:\n1. 多层次验证：支持基础、详细、综合三个验证级别\n2. 智能编码检测：自动检测文件编码并优化读取\n3. 数据质量评估：计算综合质量得分\n4. 异常检测：识别异常值和数据模式\n5. 比较验证：支持与参考文件的详细比较\n6. 报告生成：自动生成验证报告并可保存\n7. 建议系统：提供针对性的数据改进建议\n\n使用示例:\n- 基础验证: comprehensive_data_verification_tool(\"data.xlsx\", verification_level=\"basic\")\n- 详细验证: comprehensive_data_verification_tool(\"data.xlsx\", verification_level=\"detailed\")\n- 比较验证: comprehensive_data_verification_tool(\"data.xlsx\", \"reference.xlsx\", \"comprehensive\")",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1834
        },
        {
          "type": "function",
          "name": "ComprehensiveDataVerifier",
          "args_count": 0,
          "lineno": 1897
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "comprehensive_excel_verification",
          "args_count": 0,
          "lineno": 1900
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1882
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 1912
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 1,
          "lineno": 1913
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1914
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1915
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1918
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1889
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1918
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1926
        }
      ],
      "imports_used": [
        "e",
        "len",
        "mcp",
        "save_report",
        "str",
        "verifier",
        "dict",
        "reference_file",
        "ComprehensiveDataVerifier",
        "verification_level",
        "file_path",
        "os",
        "verification_result",
        "Exception",
        "bool"
      ]
    },
    "batch_data_verification_tool": {
      "name": "batch_data_verification_tool",
      "lineno": 1935,
      "args": [
        "file_paths",
        "verification_level",
        "save_reports"
      ],
      "docstring": "批量数据验证工具\n\n对多个Excel文件进行批量验证和质量评估。\n\nArgs:\n    file_paths: Excel文件路径列表\n    verification_level: 验证级别 (\"basic\", \"detailed\", \"comprehensive\")\n    save_reports: 是否保存验证报告\n\nReturns:\n    dict: 批量验证结果\n        - overall_summary: 总体摘要\n        - individual_results: 各文件验证结果\n        - quality_ranking: 质量排名\n        - batch_recommendations: 批量建议",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1934
        },
        {
          "type": "function",
          "name": "ComprehensiveDataVerifier",
          "args_count": 0,
          "lineno": 1964
        },
        {
          "type": "function",
          "name": "sorted",
          "args_count": 1,
          "lineno": 2013
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1967
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1958
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1981
        },
        {
          "type": "function",
          "name": "max",
          "args_count": 1,
          "lineno": 2022
        },
        {
          "type": "function",
          "name": "min",
          "args_count": 1,
          "lineno": 2023
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2024
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2025
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2026
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2027
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2028
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 2038
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2038
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "comprehensive_excel_verification",
          "args_count": 0,
          "lineno": 1982
        },
        {
          "type": "method",
          "object": "quality_scores",
          "method": "append",
          "args_count": 1,
          "lineno": 1989
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 2021
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 2021
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2007
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2053
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 1990
        },
        {
          "type": "method",
          "object": "result",
          "method": "get",
          "args_count": 2,
          "lineno": 1992
        },
        {
          "type": "method",
          "object": "result",
          "method": "get",
          "args_count": 2,
          "lineno": 1993
        }
      ],
      "imports_used": [
        "sum",
        "str",
        "os",
        "verification_level",
        "isinstance",
        "e",
        "min",
        "avg_score",
        "scores",
        "list",
        "mcp",
        "verifier",
        "ComprehensiveDataVerifier",
        "file_path",
        "bool",
        "max",
        "item",
        "s",
        "x",
        "batch_results",
        "quality_scores",
        "save_reports",
        "Exception",
        "len",
        "file_paths",
        "sorted",
        "dict",
        "result"
      ]
    },
    "excel_read_enhanced": {
      "name": "excel_read_enhanced",
      "lineno": 2058,
      "args": [
        "file_path",
        "sheet_name",
        "start_row",
        "end_row",
        "start_col",
        "end_col",
        "use_go_service"
      ],
      "docstring": "增强版 Excel 读取工具，集成 Go excelize 库提供高性能处理\n\nArgs:\n    file_path: Excel 文件路径\n    sheet_name: 工作表名称（可选）\n    start_row: 起始行号（可选）\n    end_row: 结束行号（可选）\n    start_col: 起始列（如 'A'，可选）\n    end_col: 结束列（如 'Z'，可选）\n    use_go_service: 是否优先使用 Go 服务（默认 True）\n    \nReturns:\n    dict: 读取结果，包含数据和性能信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2057
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2083
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 0,
          "lineno": 2084
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2097
        }
      ],
      "imports_used": [
        "use_go_service",
        "processor",
        "end_row",
        "start_row",
        "start_col",
        "mcp",
        "str",
        "int",
        "dict",
        "get_excel_processor",
        "sheet_name",
        "file_path",
        "e",
        "Exception",
        "bool",
        "result",
        "end_col"
      ]
    },
    "excel_write_enhanced": {
      "name": "excel_write_enhanced",
      "lineno": 2103,
      "args": [
        "file_path",
        "data",
        "sheet_name",
        "start_row",
        "start_col",
        "use_go_service"
      ],
      "docstring": "增强版 Excel 写入工具，集成 Go excelize 库提供高性能处理\n\nArgs:\n    file_path: Excel 文件路径\n    data: 要写入的数据（字典列表格式）\n    sheet_name: 工作表名称（可选）\n    start_row: 起始行号（可选）\n    start_col: 起始列（如 'A'，可选）\n    use_go_service: 是否优先使用 Go 服务（默认 True）\n    \nReturns:\n    dict: 写入结果，包含性能信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2102
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2133
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 0,
          "lineno": 2134
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 2126
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2146
        }
      ],
      "imports_used": [
        "use_go_service",
        "processor",
        "list",
        "start_row",
        "start_col",
        "mcp",
        "str",
        "int",
        "dict",
        "get_excel_processor",
        "sheet_name",
        "data",
        "file_path",
        "isinstance",
        "e",
        "Exception",
        "bool",
        "result"
      ]
    },
    "excel_chart_enhanced": {
      "name": "excel_chart_enhanced",
      "lineno": 2152,
      "args": [
        "file_path",
        "chart_type",
        "data_range",
        "sheet_name",
        "title",
        "x_axis_title",
        "y_axis_title"
      ],
      "docstring": "增强版 Excel 图表创建工具，使用 Go excelize 库提供高性能图表生成\n\nArgs:\n    file_path: Excel 文件路径\n    chart_type: 图表类型（'col', 'line', 'pie', 'bar', 'area', 'scatter' 等）\n    data_range: 数据范围（如 'A1:B10'）\n    sheet_name: 工作表名称（可选）\n    title: 图表标题（可选）\n    x_axis_title: X轴标题（可选）\n    y_axis_title: Y轴标题（可选）\n    \nReturns:\n    dict: 图表创建结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2151
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2186
        },
        {
          "type": "method",
          "object": "processor",
          "method": "create_chart_enhanced",
          "args_count": 0,
          "lineno": 2187
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2200
        }
      ],
      "imports_used": [
        "valid_chart_types",
        "title",
        "processor",
        "y_axis_title",
        "mcp",
        "str",
        "sheet_name",
        "chart_type",
        "get_excel_processor",
        "x_axis_title",
        "file_path",
        "e",
        "data_range",
        "Exception",
        "dict",
        "result"
      ]
    },
    "excel_info_enhanced": {
      "name": "excel_info_enhanced",
      "lineno": 2206,
      "args": [
        "file_path"
      ],
      "docstring": "增强版 Excel 文件信息获取工具，使用 Go excelize 库提供详细文件分析\n\nArgs:\n    file_path: Excel 文件路径\n    \nReturns:\n    dict: 详细的文件信息，包括工作表、行列数等",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2205
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2217
        },
        {
          "type": "method",
          "object": "processor",
          "method": "get_file_info_enhanced",
          "args_count": 1,
          "lineno": 2218
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2223
        }
      ],
      "imports_used": [
        "processor",
        "mcp",
        "str",
        "get_excel_processor",
        "file_path",
        "e",
        "Exception",
        "dict",
        "result"
      ]
    },
    "excel_performance_comparison": {
      "name": "excel_performance_comparison",
      "lineno": 2229,
      "args": [
        "file_path",
        "operation",
        "test_data"
      ],
      "docstring": "Excel 性能对比工具，比较 Go 服务和 pandas 的性能差异\n\nArgs:\n    file_path: Excel 文件路径\n    operation: 操作类型（'read' 或 'write'）\n    test_data: 测试数据（写入操作时需要）\n    \nReturns:\n    dict: 性能对比结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2228
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2256
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2260
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 1,
          "lineno": 2261
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2265
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 1,
          "lineno": 2266
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2262
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2267
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2285
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2271
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2272
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2276
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2277
        },
        {
          "type": "method",
          "object": "tempfile",
          "method": "NamedTemporaryFile",
          "args_count": 0,
          "lineno": 2305
        },
        {
          "type": "method",
          "object": "tempfile",
          "method": "NamedTemporaryFile",
          "args_count": 0,
          "lineno": 2306
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2309
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 2,
          "lineno": 2310
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2314
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 2,
          "lineno": 2315
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2311
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2316
        },
        {
          "type": "method",
          "object": "os",
          "method": "unlink",
          "args_count": 1,
          "lineno": 2320
        },
        {
          "type": "method",
          "object": "os",
          "method": "unlink",
          "args_count": 1,
          "lineno": 2321
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2341
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2362
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2273
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2278
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2327
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2328
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2332
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2333
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2329
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2334
        }
      ],
      "imports_used": [
        "time",
        "go_time",
        "speedup",
        "tmp1",
        "str",
        "get_excel_processor",
        "os",
        "tempfile",
        "start_time",
        "operation",
        "e",
        "processor",
        "list",
        "mcp",
        "pandas_time",
        "file_path",
        "round",
        "pandas_result",
        "results",
        "test_data",
        "Exception",
        "tmp2",
        "go_result",
        "dict"
      ]
    },
    "parse_formula": {
      "name": "parse_formula",
      "lineno": 2369,
      "args": [
        "formula",
        "validate_security"
      ],
      "docstring": "解析 Excel 公式\n\nArgs:\n    formula: Excel 公式字符串\n    validate_security: 是否进行安全验证\n    \nReturns:\n    str: JSON 格式的解析结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2368
        },
        {
          "type": "function",
          "name": "parse_excel_formula",
          "args_count": 2,
          "lineno": 2379
        }
      ],
      "imports_used": [
        "formula",
        "mcp",
        "str",
        "validate_security",
        "parse_excel_formula",
        "bool"
      ]
    },
    "compile_workbook": {
      "name": "compile_workbook",
      "lineno": 2382,
      "args": [
        "file_path",
        "output_format"
      ],
      "docstring": "编译 Excel 工作簿为代码\n\nArgs:\n    file_path: Excel 文件路径\n    output_format: 输出格式 ('python' 或 'json')\n    \nReturns:\n    str: JSON 格式的编译结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2381
        },
        {
          "type": "function",
          "name": "compile_excel_workbook",
          "args_count": 2,
          "lineno": 2392
        }
      ],
      "imports_used": [
        "mcp",
        "str",
        "compile_excel_workbook",
        "output_format",
        "file_path"
      ]
    },
    "execute_formula": {
      "name": "execute_formula",
      "lineno": 2395,
      "args": [
        "formula",
        "context"
      ],
      "docstring": "执行 Excel 公式\n\nArgs:\n    formula: Excel 公式字符串\n    context: JSON 格式的上下文数据\n    \nReturns:\n    str: JSON 格式的执行结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2394
        },
        {
          "type": "function",
          "name": "execute_excel_formula",
          "args_count": 2,
          "lineno": 2405
        }
      ],
      "imports_used": [
        "formula",
        "mcp",
        "str",
        "context",
        "execute_excel_formula"
      ]
    },
    "analyze_dependencies": {
      "name": "analyze_dependencies",
      "lineno": 2408,
      "args": [
        "file_path"
      ],
      "docstring": "分析 Excel 文件的公式依赖关系\n\nArgs:\n    file_path: Excel 文件路径\n    \nReturns:\n    str: JSON 格式的依赖分析结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2407
        },
        {
          "type": "function",
          "name": "analyze_excel_dependencies",
          "args_count": 1,
          "lineno": 2417
        }
      ],
      "imports_used": [
        "str",
        "analyze_excel_dependencies",
        "file_path",
        "mcp"
      ]
    },
    "validate_formula": {
      "name": "validate_formula",
      "lineno": 2420,
      "args": [
        "formula"
      ],
      "docstring": "验证 Excel 公式的安全性和有效性\n\nArgs:\n    formula: Excel 公式字符串\n    \nReturns:\n    str: JSON 格式的验证结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2419
        },
        {
          "type": "function",
          "name": "validate_excel_formula",
          "args_count": 1,
          "lineno": 2429
        }
      ],
      "imports_used": [
        "str",
        "formula",
        "mcp",
        "validate_excel_formula"
      ]
    },
    "enhanced_data_quality_check": {
      "name": "enhanced_data_quality_check",
      "lineno": 2434,
      "args": [
        "file_path",
        "quality_level"
      ],
      "docstring": "增强的Excel数据质量检查工具\n\nArgs:\n    file_path: Excel文件路径\n    quality_level: 质量检查级别 (\"basic\", \"standard\", \"comprehensive\")\n    \nReturns:\n    dict: 数据质量检查结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2433
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 2445
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2447
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2447
        }
      ],
      "imports_used": [
        "data_quality_controller",
        "mcp",
        "str",
        "file_path",
        "quality_level",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "extract_cell_content_advanced": {
      "name": "extract_cell_content_advanced",
      "lineno": 2451,
      "args": [
        "file_path",
        "cell_range",
        "sheet_name",
        "extract_type"
      ],
      "docstring": "高级单元格内容提取工具\n\nArgs:\n    file_path: Excel文件路径\n    cell_range: 单元格范围 (如 \"A1:C10\")\n    sheet_name: 工作表名称\n    extract_type: 提取类型 (\"all\", \"text\", \"numbers\", \"formulas\", \"formatted\")\n    \nReturns:\n    dict: 提取的单元格内容",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2450
        },
        {
          "type": "method",
          "object": "cell_content_extractor",
          "method": "extract_cell_content_advanced",
          "args_count": 4,
          "lineno": 2465
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2469
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2469
        }
      ],
      "imports_used": [
        "mcp",
        "str",
        "sheet_name",
        "Optional",
        "cell_range",
        "cell_content_extractor",
        "extract_type",
        "file_path",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "convert_character_formats": {
      "name": "convert_character_formats",
      "lineno": 2473,
      "args": [
        "file_path",
        "conversion_rules",
        "output_path"
      ],
      "docstring": "字符格式自动化转换工具\n\nArgs:\n    file_path: Excel文件路径\n    conversion_rules: 转换规则字典\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 转换结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2472
        },
        {
          "type": "method",
          "object": "character_converter",
          "method": "batch_character_conversion",
          "args_count": 3,
          "lineno": 2485
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2489
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2489
        }
      ],
      "imports_used": [
        "conversion_rules",
        "mcp",
        "output_path",
        "str",
        "character_converter",
        "Optional",
        "file_path",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "extract_multi_condition_data": {
      "name": "extract_multi_condition_data",
      "lineno": 2493,
      "args": [
        "file_path",
        "conditions",
        "sheet_name"
      ],
      "docstring": "多条件数据提取工具\n\nArgs:\n    file_path: Excel文件路径\n    conditions: 条件列表\n    sheet_name: 工作表名称\n    \nReturns:\n    dict: 提取的数据",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2492
        },
        {
          "type": "method",
          "object": "multi_condition_extractor",
          "method": "extract_with_multiple_conditions",
          "args_count": 3,
          "lineno": 2505
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2509
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2509
        }
      ],
      "imports_used": [
        "multi_condition_extractor",
        "list",
        "conditions",
        "mcp",
        "str",
        "sheet_name",
        "Optional",
        "file_path",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "merge_multiple_tables": {
      "name": "merge_multiple_tables",
      "lineno": 2513,
      "args": [
        "file_paths",
        "merge_config",
        "output_path"
      ],
      "docstring": "多表格数据合并工具\n\nArgs:\n    file_paths: Excel文件路径列表\n    merge_config: 合并配置\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 合并结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2512
        },
        {
          "type": "method",
          "object": "multi_table_merger",
          "method": "merge_multiple_excel_files",
          "args_count": 3,
          "lineno": 2525
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2529
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2529
        }
      ],
      "imports_used": [
        "list",
        "mcp",
        "output_path",
        "str",
        "multi_table_merger",
        "Optional",
        "file_paths",
        "merge_config",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "clean_excel_data": {
      "name": "clean_excel_data",
      "lineno": 2533,
      "args": [
        "file_path",
        "cleaning_options",
        "output_path"
      ],
      "docstring": "Excel数据清洗工具\n\nArgs:\n    file_path: Excel文件路径\n    cleaning_options: 清洗选项\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 清洗结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2532
        },
        {
          "type": "method",
          "object": "data_cleaner",
          "method": "clean_excel_data",
          "args_count": 0,
          "lineno": 2545
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2551
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2551
        }
      ],
      "imports_used": [
        "data_cleaner",
        "mcp",
        "cleaning_options",
        "output_path",
        "str",
        "Optional",
        "file_path",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    },
    "batch_process_excel_files": {
      "name": "batch_process_excel_files",
      "lineno": 2555,
      "args": [
        "file_paths",
        "processing_config"
      ],
      "docstring": "批量Excel文件处理工具\n\nArgs:\n    file_paths: Excel文件路径列表\n    processing_config: 处理配置\n    \nReturns:\n    dict: 批量处理结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2554
        },
        {
          "type": "method",
          "object": "batch_processor",
          "method": "batch_process_files",
          "args_count": 2,
          "lineno": 2566
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2570
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2570
        }
      ],
      "imports_used": [
        "list",
        "batch_processor",
        "mcp",
        "str",
        "processing_config",
        "file_paths",
        "e",
        "create_error_response",
        "Exception",
        "dict"
      ]
    }
  },
  "modules_info": {
    "formulas_tools": {
      "classes": {
        "FormulaTemplateManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 57
            },
            {
              "name": "_initialize_templates",
              "args": [
                "self"
              ],
              "lineno": 61
            },
            {
              "name": "get_templates_by_category",
              "args": [
                "self",
                "category"
              ],
              "lineno": 190
            },
            {
              "name": "search_templates",
              "args": [
                "self",
                "keyword"
              ],
              "lineno": 194
            },
            {
              "name": "get_template_by_name",
              "args": [
                "self",
                "name"
              ],
              "lineno": 212
            },
            {
              "name": "get_templates",
              "args": [
                "self",
                "category",
                "difficulty"
              ],
              "lineno": 223
            },
            {
              "name": "get_available_categories",
              "args": [
                "self"
              ],
              "lineno": 260
            },
            {
              "name": "find_matching_templates",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 264
            },
            {
              "name": "_estimate_difficulty",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 285
            },
            {
              "name": "_calculate_similarity",
              "args": [
                "self",
                "formula1",
                "formula2"
              ],
              "lineno": 310
            }
          ],
          "lineno": 54
        },
        "IntelligentRecommender": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "template_manager"
              ],
              "lineno": 320
            },
            {
              "name": "analyze_data_characteristics",
              "args": [
                "self",
                "data"
              ],
              "lineno": 331
            },
            {
              "name": "_analyze_column",
              "args": [
                "self",
                "series"
              ],
              "lineno": 346
            },
            {
              "name": "recommend_formulas",
              "args": [
                "self",
                "data_characteristics",
                "user_intent"
              ],
              "lineno": 377
            },
            {
              "name": "_get_numeric_recommendations",
              "args": [
                "self"
              ],
              "lineno": 411
            },
            {
              "name": "_get_date_recommendations",
              "args": [
                "self"
              ],
              "lineno": 419
            },
            {
              "name": "_get_financial_recommendations",
              "args": [
                "self"
              ],
              "lineno": 427
            },
            {
              "name": "_get_text_recommendations",
              "args": [
                "self"
              ],
              "lineno": 435
            },
            {
              "name": "get_recommendations",
              "args": [
                "self",
                "data_range",
                "user_intent",
                "context"
              ],
              "lineno": 443
            },
            {
              "name": "get_optimization_suggestions",
              "args": [
                "self",
                "formula",
                "data_context"
              ],
              "lineno": 490
            },
            {
              "name": "_get_intent_based_recommendations",
              "args": [
                "self",
                "user_intent"
              ],
              "lineno": 534
            },
            {
              "name": "_get_context_based_recommendations",
              "args": [
                "self",
                "context"
              ],
              "lineno": 561
            },
            {
              "name": "_deduplicate_recommendations",
              "args": [
                "self",
                "recommendations"
              ],
              "lineno": 590
            },
            {
              "name": "_get_performance_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 605
            },
            {
              "name": "_get_readability_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 631
            },
            {
              "name": "_get_functionality_suggestions",
              "args": [
                "self",
                "formula",
                "data_context"
              ],
              "lineno": 658
            },
            {
              "name": "_get_error_handling_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 676
            }
          ],
          "lineno": 317
        },
        "MultiWorkbookProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 698
            },
            {
              "name": "load_workbook",
              "args": [
                "self",
                "file_path",
                "alias"
              ],
              "lineno": 702
            },
            {
              "name": "analyze_cross_references",
              "args": [
                "self"
              ],
              "lineno": 727
            },
            {
              "name": "execute_cross_workbook_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 750
            },
            {
              "name": "_process_cross_references",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 793
            }
          ],
          "lineno": 695
        },
        "PerformanceAnalyzer": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 810
            },
            {
              "name": "analyze_formula_performance",
              "args": [
                "self",
                "formula",
                "execution_time",
                "memory_usage"
              ],
              "lineno": 818
            },
            {
              "name": "_calculate_complexity",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 858
            },
            {
              "name": "get_performance_report",
              "args": [
                "self"
              ],
              "lineno": 891
            },
            {
              "name": "_analyze_trends",
              "args": [
                "self",
                "executions"
              ],
              "lineno": 915
            },
            {
              "name": "analyze_formula_complexity",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 934
            }
          ],
          "lineno": 807
        },
        "FormulasSecurityManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 980
            },
            {
              "name": "validate_formula",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 993
            },
            {
              "name": "_calculate_nesting_level",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 1060
            },
            {
              "name": "_estimate_array_size",
              "args": [
                "self",
                "range_pattern"
              ],
              "lineno": 1074
            }
          ],
          "lineno": 977
        },
        "FormulasToolsManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1098
            },
            {
              "name": "_check_formulas_availability",
              "args": [
                "self"
              ],
              "lineno": 1107
            },
            {
              "name": "parse_formula",
              "args": [
                "self",
                "formula",
                "validate_security",
                "include_recommendations",
                "analyze_performance"
              ],
              "lineno": 1114
            },
            {
              "name": "_extract_functions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 1202
            },
            {
              "name": "_generate_optimization_recommendations",
              "args": [
                "self",
                "formula",
                "functions_used"
              ],
              "lineno": 1216
            },
            {
              "name": "compile_workbook",
              "args": [
                "self",
                "file_path",
                "output_format"
              ],
              "lineno": 1239
            },
            {
              "name": "execute_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 1343
            },
            {
              "name": "analyze_dependencies",
              "args": [
                "self",
                "file_path",
                "include_cross_references",
                "generate_visualization"
              ],
              "lineno": 1409
            },
            {
              "name": "_generate_visualization_data",
              "args": [
                "self",
                "dependencies",
                "formulas_info"
              ],
              "lineno": 1513
            },
            {
              "name": "validate_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 1558
            },
            {
              "name": "batch_process_formulas",
              "args": [
                "self",
                "formulas",
                "operation",
                "context"
              ],
              "lineno": 1618
            },
            {
              "name": "get_formula_templates",
              "args": [
                "self",
                "category",
                "difficulty"
              ],
              "lineno": 1687
            },
            {
              "name": "get_intelligent_recommendations",
              "args": [
                "self",
                "context"
              ],
              "lineno": 1718
            }
          ],
          "lineno": 1095
        }
      },
      "functions": [
        {
          "name": "parse_excel_formula",
          "args": [
            "formula",
            "validate_security"
          ],
          "lineno": 1752
        },
        {
          "name": "compile_excel_workbook",
          "args": [
            "file_path",
            "output_format"
          ],
          "lineno": 1776
        },
        {
          "name": "execute_excel_formula",
          "args": [
            "formula",
            "context"
          ],
          "lineno": 1800
        },
        {
          "name": "analyze_excel_dependencies",
          "args": [
            "file_path"
          ],
          "lineno": 1834
        },
        {
          "name": "validate_excel_formula",
          "args": [
            "formula"
          ],
          "lineno": 1857
        },
        {
          "name": "batch_process_excel_formulas",
          "args": [
            "formulas_json",
            "operation"
          ],
          "lineno": 1881
        },
        {
          "name": "get_excel_formula_templates",
          "args": [
            "category",
            "difficulty"
          ],
          "lineno": 1916
        },
        {
          "name": "get_excel_formula_recommendations",
          "args": [
            "context_json"
          ],
          "lineno": 1943
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/formulas_tools.py"
    },
    "excel_data_quality_tools": {
      "classes": {
        "ExcelDataQualityController": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 48
            },
            {
              "name": "_initialize_quality_rules",
              "args": [
                "self"
              ],
              "lineno": 53
            },
            {
              "name": "_initialize_character_patterns",
              "args": [
                "self"
              ],
              "lineno": 77
            },
            {
              "name": "comprehensive_quality_check",
              "args": [
                "self",
                "file_path",
                "level"
              ],
              "lineno": 93
            },
            {
              "name": "validate_data_integrity",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "validation_rules"
              ],
              "lineno": 142
            },
            {
              "name": "_check_completeness",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 220
            },
            {
              "name": "_check_consistency",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 276
            },
            {
              "name": "_check_accuracy",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 320
            },
            {
              "name": "_check_uniqueness",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 385
            },
            {
              "name": "_summarize_validation_results",
              "args": [
                "self",
                "validation_result"
              ],
              "lineno": 430
            }
          ],
          "lineno": 45
        },
        "ExcelCellContentExtractor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 466
            },
            {
              "name": "_initialize_extraction_patterns",
              "args": [
                "self"
              ],
              "lineno": 469
            },
            {
              "name": "extract_cell_content_advanced",
              "args": [
                "self",
                "file_path",
                "cell_range",
                "sheet_name",
                "extract_type"
              ],
              "lineno": 488
            },
            {
              "name": "extract_cell_content",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "cell_range",
                "extraction_type",
                "clean_whitespace"
              ],
              "lineno": 512
            },
            {
              "name": "_extract_by_type",
              "args": [
                "self",
                "text",
                "extraction_type"
              ],
              "lineno": 624
            },
            {
              "name": "_get_cell_format_info",
              "args": [
                "self",
                "cell"
              ],
              "lineno": 655
            },
            {
              "name": "_generate_extraction_statistics",
              "args": [
                "self",
                "extracted_data"
              ],
              "lineno": 681
            }
          ],
          "lineno": 463
        },
        "ExcelCharacterConverter": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 718
            },
            {
              "name": "_initialize_conversion_rules",
              "args": [
                "self"
              ],
              "lineno": 721
            },
            {
              "name": "convert_character_formats",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "conversion_types",
                "target_columns",
                "save_backup"
              ],
              "lineno": 750
            },
            {
              "name": "_apply_conversion_rule",
              "args": [
                "self",
                "text",
                "conversion_type"
              ],
              "lineno": 886
            },
            {
              "name": "_convert_chinese_numbers",
              "args": [
                "self",
                "text"
              ],
              "lineno": 904
            },
            {
              "name": "_generate_output_path",
              "args": [
                "self",
                "original_path",
                "suffix"
              ],
              "lineno": 916
            },
            {
              "name": "_generate_conversion_statistics",
              "args": [
                "self",
                "original_df",
                "converted_df",
                "conversion_types"
              ],
              "lineno": 921
            },
            {
              "name": "batch_character_conversion",
              "args": [
                "self",
                "file_path",
                "conversion_rules",
                "output_path"
              ],
              "lineno": 947
            }
          ],
          "lineno": 715
        },
        "ExcelMultiConditionExtractor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1090
            },
            {
              "name": "extract_multi_condition_data",
              "args": [
                "self",
                "file_path",
                "conditions",
                "logic_operator",
                "sheet_name",
                "output_columns"
              ],
              "lineno": 1108
            },
            {
              "name": "_apply_condition",
              "args": [
                "self",
                "df",
                "column",
                "operator",
                "value"
              ],
              "lineno": 1234
            },
            {
              "name": "extract_with_multiple_conditions",
              "args": [
                "self",
                "file_path",
                "conditions",
                "sheet_name"
              ],
              "lineno": 1253
            },
            {
              "name": "cross_validate_data",
              "args": [
                "self",
                "file_path",
                "reference_file",
                "key_columns",
                "compare_columns",
                "tolerance"
              ],
              "lineno": 1341
            }
          ],
          "lineno": 1087
        },
        "ExcelMultiTableMerger": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1466
            },
            {
              "name": "merge_multiple_tables",
              "args": [
                "self",
                "table_configs",
                "merge_strategy",
                "key_columns",
                "output_file"
              ],
              "lineno": 1474
            },
            {
              "name": "_merge_dataframes",
              "args": [
                "self",
                "dataframes",
                "strategy",
                "key_columns"
              ],
              "lineno": 1581
            },
            {
              "name": "merge_multiple_excel_files",
              "args": [
                "self",
                "file_paths",
                "merge_config",
                "output_path"
              ],
              "lineno": 1633
            },
            {
              "name": "merge_with_conditions",
              "args": [
                "self",
                "primary_file",
                "secondary_files",
                "merge_conditions",
                "output_file"
              ],
              "lineno": 1706
            },
            {
              "name": "_merge_with_condition",
              "args": [
                "self",
                "primary_df",
                "secondary_df",
                "condition",
                "step_name"
              ],
              "lineno": 1783
            }
          ],
          "lineno": 1463
        },
        "ExcelDataCleaner": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1830
            },
            {
              "name": "_initialize_cleaning_rules",
              "args": [
                "self"
              ],
              "lineno": 1833
            },
            {
              "name": "clean_excel_data",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "cleaning_config",
                "output_file"
              ],
              "lineno": 1864
            },
            {
              "name": "_clean_whitespace",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 1957
            },
            {
              "name": "_remove_duplicates",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 1988
            },
            {
              "name": "_handle_missing_values",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2005
            },
            {
              "name": "_handle_outliers",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2045
            },
            {
              "name": "_detect_outliers",
              "args": [
                "self",
                "series",
                "method",
                "threshold"
              ],
              "lineno": 2088
            },
            {
              "name": "_convert_data_types",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2106
            },
            {
              "name": "_generate_cleaning_summary",
              "args": [
                "self",
                "original_df",
                "cleaned_df",
                "steps"
              ],
              "lineno": 2158
            },
            {
              "name": "suggest_cleaning_operations",
              "args": [
                "self",
                "df"
              ],
              "lineno": 2182
            },
            {
              "name": "_get_missing_value_recommendation",
              "args": [
                "self",
                "missing_percentage"
              ],
              "lineno": 2313
            }
          ],
          "lineno": 1827
        },
        "ExcelBatchProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 2328
            },
            {
              "name": "batch_process_files",
              "args": [
                "self",
                "file_paths",
                "processing_config",
                "output_directory"
              ],
              "lineno": 2336
            },
            {
              "name": "_process_single_file",
              "args": [
                "self",
                "file_path",
                "config",
                "output_dir"
              ],
              "lineno": 2403
            },
            {
              "name": "_generate_batch_summary",
              "args": [
                "self",
                "batch_result"
              ],
              "lineno": 2485
            }
          ],
          "lineno": 2325
        }
      },
      "functions": [],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_data_quality_tools.py"
    },
    "excel_helper": {
      "classes": {},
      "functions": [
        {
          "name": "_suggest_excel_read_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 6
        },
        {
          "name": "_fallback_suggest_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 39
        },
        {
          "name": "detect_excel_structure",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 124
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_helper.py"
    },
    "excel_smart_tools": {
      "classes": {},
      "functions": [
        {
          "name": "suggest_excel_read_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 4
        },
        {
          "name": "detect_excel_file_structure",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 24
        },
        {
          "name": "create_excel_read_template",
          "args": [
            "file_path",
            "sheet_name",
            "skiprows",
            "header",
            "usecols"
          ],
          "lineno": 43
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_smart_tools.py"
    },
    "enhanced_excel_helper": {
      "classes": {
        "EncodingCache": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "cache_dir",
                "max_cache_size_mb",
                "config_file"
              ],
              "lineno": 22
            },
            {
              "name": "_load_config",
              "args": [
                "self",
                "config_file"
              ],
              "lineno": 58
            },
            {
              "name": "_merge_config",
              "args": [
                "self",
                "default",
                "user"
              ],
              "lineno": 92
            },
            {
              "name": "_load_cache",
              "args": [
                "self"
              ],
              "lineno": 100
            },
            {
              "name": "_save_cache",
              "args": [
                "self"
              ],
              "lineno": 110
            },
            {
              "name": "_get_file_hash",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 118
            },
            {
              "name": "get",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 128
            },
            {
              "name": "set",
              "args": [
                "self",
                "file_path",
                "encoding"
              ],
              "lineno": 141
            },
            {
              "name": "_cleanup_expired_cache",
              "args": [
                "self"
              ],
              "lineno": 160
            },
            {
              "name": "_monitor_cache_size",
              "args": [
                "self"
              ],
              "lineno": 184
            },
            {
              "name": "_reduce_cache_size",
              "args": [
                "self"
              ],
              "lineno": 206
            },
            {
              "name": "create_backup",
              "args": [
                "self"
              ],
              "lineno": 227
            },
            {
              "name": "restore_from_backup",
              "args": [
                "self"
              ],
              "lineno": 244
            },
            {
              "name": "get_cache_stats",
              "args": [
                "self"
              ],
              "lineno": 263
            }
          ],
          "lineno": 19
        }
      },
      "functions": [
        {
          "name": "detect_file_encoding",
          "args": [
            "file_path",
            "use_cache"
          ],
          "lineno": 296
        },
        {
          "name": "smart_read_excel",
          "args": [
            "file_path",
            "sheet_name",
            "encoding",
            "auto_detect_params"
          ],
          "lineno": 386
        },
        {
          "name": "validate_excel_data_integrity",
          "args": [
            "original_file",
            "processed_data",
            "sheet_name"
          ],
          "lineno": 536
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/enhanced_excel_helper.py"
    },
    "comprehensive_data_verification": {
      "classes": {
        "ComprehensiveDataVerifier": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 24
            },
            {
              "name": "comprehensive_excel_verification",
              "args": [
                "self",
                "file_path",
                "reference_file",
                "verification_level",
                "save_report"
              ],
              "lineno": 28
            },
            {
              "name": "_analyze_file_structure",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 126
            },
            {
              "name": "_verify_data_integrity",
              "args": [
                "self",
                "file_path",
                "level"
              ],
              "lineno": 177
            },
            {
              "name": "_compare_with_reference",
              "args": [
                "self",
                "file_path",
                "reference_file"
              ],
              "lineno": 262
            },
            {
              "name": "_detect_anomalies",
              "args": [
                "self",
                "df"
              ],
              "lineno": 294
            },
            {
              "name": "_calculate_data_quality_score",
              "args": [
                "self",
                "file_analysis",
                "integrity_results",
                "comparison_results"
              ],
              "lineno": 335
            },
            {
              "name": "_generate_detailed_report",
              "args": [
                "self",
                "file_path",
                "file_analysis",
                "integrity_results"
              ],
              "lineno": 379
            },
            {
              "name": "_generate_comprehensive_recommendations",
              "args": [
                "self",
                "file_analysis",
                "integrity_results",
                "comparison_results"
              ],
              "lineno": 422
            },
            {
              "name": "_determine_overall_status",
              "args": [
                "self",
                "quality_score",
                "integrity_results"
              ],
              "lineno": 461
            },
            {
              "name": "_save_verification_report",
              "args": [
                "self",
                "verification_result"
              ],
              "lineno": 477
            }
          ],
          "lineno": 21
        }
      },
      "functions": [],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/comprehensive_data_verification.py"
    },
    "data_verification": {
      "classes": {
        "DataVerificationEngine": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 19
            },
            {
              "name": "compare_dataframes",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2",
                "key_columns"
              ],
              "lineno": 23
            },
            {
              "name": "_analyze_structural_differences",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2"
              ],
              "lineno": 94
            },
            {
              "name": "_analyze_content_differences",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2",
                "key_columns"
              ],
              "lineno": 137
            },
            {
              "name": "_compare_by_key_columns",
              "args": [
                "self",
                "df1",
                "df2",
                "key_columns",
                "common_cols"
              ],
              "lineno": 174
            },
            {
              "name": "_compare_by_index",
              "args": [
                "self",
                "df1",
                "df2",
                "common_cols"
              ],
              "lineno": 225
            },
            {
              "name": "_compare_statistics",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2"
              ],
              "lineno": 274
            },
            {
              "name": "_calculate_match_score",
              "args": [
                "self",
                "structural_diff",
                "content_diff",
                "stats_comparison"
              ],
              "lineno": 359
            },
            {
              "name": "_generate_recommendations",
              "args": [
                "self",
                "comparison_result"
              ],
              "lineno": 405
            }
          ],
          "lineno": 16
        }
      },
      "functions": [
        {
          "name": "verify_data_processing_result",
          "args": [
            "original_data",
            "processed_data",
            "processing_description",
            "key_columns"
          ],
          "lineno": 436
        },
        {
          "name": "_assess_completeness",
          "args": [
            "original_df",
            "processed_df"
          ],
          "lineno": 518
        },
        {
          "name": "_assess_consistency",
          "args": [
            "df"
          ],
          "lineno": 527
        },
        {
          "name": "_assess_accuracy",
          "args": [
            "comparison"
          ],
          "lineno": 535
        },
        {
          "name": "_assess_validity",
          "args": [
            "df"
          ],
          "lineno": 543
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/data_verification.py"
    },
    "excel_enhanced_tools": {
      "classes": {
        "ExcelEnhancedProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "use_go_service",
                "fallback_to_pandas"
              ],
              "lineno": 24
            },
            {
              "name": "_should_use_go_service",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 50
            },
            {
              "name": "_get_server_functions",
              "args": [
                "self"
              ],
              "lineno": 66
            },
            {
              "name": "read_excel_enhanced",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "start_row",
                "end_row",
                "start_col",
                "end_col",
                "use_go"
              ],
              "lineno": 87
            },
            {
              "name": "write_excel_enhanced",
              "args": [
                "self",
                "file_path",
                "data",
                "sheet_name",
                "start_row",
                "start_col",
                "use_go"
              ],
              "lineno": 249
            },
            {
              "name": "create_chart_enhanced",
              "args": [
                "self",
                "file_path",
                "chart_type",
                "data_range",
                "chart_title",
                "sheet_name",
                "x_axis_title",
                "y_axis_title",
                "use_go"
              ],
              "lineno": 367
            },
            {
              "name": "get_file_info_enhanced",
              "args": [
                "self",
                "file_path",
                "use_go"
              ],
              "lineno": 448
            }
          ],
          "lineno": 21
        }
      },
      "functions": [
        {
          "name": "get_excel_processor",
          "args": [
            "use_go_service",
            "fallback_to_pandas"
          ],
          "lineno": 631
        },
        {
          "name": "read_excel_enhanced",
          "args": [
            "file_path"
          ],
          "lineno": 649
        },
        {
          "name": "write_excel_enhanced",
          "args": [
            "file_path",
            "data"
          ],
          "lineno": 654
        },
        {
          "name": "create_chart_enhanced",
          "args": [
            "file_path",
            "chart_type",
            "data_range"
          ],
          "lineno": 659
        },
        {
          "name": "get_file_info_enhanced",
          "args": [
            "file_path"
          ],
          "lineno": 664
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_enhanced_tools.py"
    }
  },
  "issues": {
    "all": [
      {
        "type": "missing_function",
        "severity": "medium",
        "tool": "run_excel_code",
        "function": "ColumnChecker",
        "line": 1179
      }
    ],
    "by_tool": {
      "run_excel_code": [
        {
          "type": "missing_function",
          "severity": "medium",
          "tool": "run_excel_code",
          "function": "ColumnChecker",
          "line": 1179
        }
      ]
    },
    "by_severity": {
      "critical": [],
      "high": [],
      "medium": [
        {
          "type": "missing_function",
          "severity": "medium",
          "tool": "run_excel_code",
          "function": "ColumnChecker",
          "line": 1179
        }
      ]
    }
  },
  "recommendations": []
}