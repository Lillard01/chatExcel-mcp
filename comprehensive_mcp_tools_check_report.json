{
  "timestamp": "/Users/wangdada/Downloads/mcp/chatExcel-mcp",
  "summary": {
    "total_tools": 31,
    "total_issues": 0,
    "critical_issues": 0,
    "high_issues": 0,
    "medium_issues": 0,
    "modules_checked": 8,
    "modules_with_errors": 0
  },
  "tools_info": {
    "read_metadata": {
      "name": "read_metadata",
      "lineno": 181,
      "args": [
        "file_path"
      ],
      "docstring": "读取CSV文件元数据并返回MCP兼容格式\n\nArgs:\n    file_path: CSV文件的绝对路径\n    \nReturns:\n    dict: 包含列信息、文件信息和状态的结构化元数据",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 180
        },
        {
          "type": "method",
          "object": "logger",
          "method": "info",
          "args_count": 1,
          "lineno": 190
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 194
        },
        {
          "type": "function",
          "name": "min",
          "args_count": 2,
          "lineno": 230
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 231
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 199
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 1,
          "lineno": 200
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 203
        },
        {
          "type": "method",
          "object": "f",
          "method": "readline",
          "args_count": 0,
          "lineno": 204
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 250
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_string_dtype"
          ],
          "args_count": 1,
          "lineno": 262
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_datetime64_any_dtype"
          ],
          "args_count": 1,
          "lineno": 268
        },
        {
          "type": "method",
          "object": "columns_metadata",
          "method": "append",
          "args_count": 1,
          "lineno": 281
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 213
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 217
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 218
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 238
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 278
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 295
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 296
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 338
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 344
        },
        {
          "type": "function",
          "name": "detect",
          "args_count": 1,
          "lineno": 201
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 243
        },
        {
          "type": "function",
          "name": "infer_dtype",
          "args_count": 1,
          "lineno": 298
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 337
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 313
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 328
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 213
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 310
        },
        {
          "type": "chained_method",
          "chain": [
            "index",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 320
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 325
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 305
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 322
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 328
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 306
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 313
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 319
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 325
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 304
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 310
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 316
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 315
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 320
        }
      ],
      "imports_used": [
        "dict",
        "traceback",
        "rawdata",
        "first_line",
        "_",
        "detect",
        "e",
        "total_rows",
        "df",
        "col_meta",
        "summary",
        "f",
        "min",
        "temp_df",
        "open",
        "str",
        "columns_metadata",
        "Exception",
        "validation_result",
        "logger",
        "delimiter",
        "sum",
        "validate_file_access",
        "mcp",
        "file_path",
        "file_size",
        "pd",
        "infer_dtype",
        "MAX_FILE_SIZE",
        "sample_size",
        "enc",
        "type",
        "col",
        "len"
      ]
    },
    "verify_data_integrity": {
      "name": "verify_data_integrity",
      "lineno": 351,
      "args": [
        "original_file",
        "processed_data",
        "comparison_file",
        "verification_type"
      ],
      "docstring": "数据完整性验证和比对核准工具。\n\nArgs:\n    original_file: 原始Excel文件路径\n    processed_data: 处理后的数据（JSON字符串格式）或文件路径\n    comparison_file: 用于比较的另一个Excel文件路径（可选）\n    verification_type: 验证类型 (\"basic\", \"detailed\", \"statistical\")\n\nReturns:\n    dict: 验证结果报告",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 350
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 368
        },
        {
          "type": "function",
          "name": "DataVerificationEngine",
          "args_count": 0,
          "lineno": 377
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 381
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 390
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 391
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "compare_dataframes",
          "args_count": 2,
          "lineno": 393
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 400
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 403
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 470
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 395
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 396
        },
        {
          "type": "method",
          "object": "comparison_result",
          "method": "get",
          "args_count": 2,
          "lineno": 422
        },
        {
          "type": "method",
          "object": "comparison_result",
          "method": "get",
          "args_count": 2,
          "lineno": 423
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 431
        },
        {
          "type": "function",
          "name": "verify_data_processing_result",
          "args_count": 3,
          "lineno": 451
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 521
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 522
        },
        {
          "type": "method",
          "object": "quality_result1",
          "method": "get",
          "args_count": 2,
          "lineno": 411
        },
        {
          "type": "method",
          "object": "quality_result2",
          "method": "get",
          "args_count": 2,
          "lineno": 411
        },
        {
          "type": "method",
          "object": "processed_data",
          "method": "endswith",
          "args_count": 1,
          "lineno": 432
        },
        {
          "type": "function",
          "name": "list",
          "args_count": 1,
          "lineno": 477
        },
        {
          "type": "chained_method",
          "chain": [
            "df",
            "dtypes",
            "to_dict"
          ],
          "args_count": 0,
          "lineno": 478
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 481
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 482
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 494
        },
        {
          "type": "method",
          "object": "col_info",
          "method": "update",
          "args_count": 1,
          "lineno": 501
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 520
        },
        {
          "type": "method",
          "object": "quality_result1",
          "method": "get",
          "args_count": 2,
          "lineno": 412
        },
        {
          "type": "method",
          "object": "quality_result2",
          "method": "get",
          "args_count": 2,
          "lineno": 412
        },
        {
          "type": "method",
          "object": "processed_data",
          "method": "endswith",
          "args_count": 1,
          "lineno": 434
        },
        {
          "type": "method",
          "object": "json",
          "method": "loads",
          "args_count": 1,
          "lineno": 441
        },
        {
          "type": "method",
          "object": "pd",
          "method": "DataFrame",
          "args_count": 1,
          "lineno": 442
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 435
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 437
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 485
        },
        {
          "type": "method",
          "object": "df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 486
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 464
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 483
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 484
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 484
        }
      ],
      "imports_used": [
        "dict",
        "traceback",
        "verification_result",
        "e",
        "comparison_result",
        "verifier",
        "verification_type",
        "data_quality_controller",
        "df",
        "original_file",
        "integrity_report",
        "processed_df",
        "df2",
        "quality_result2",
        "str",
        "Exception",
        "DataVerificationEngine",
        "isinstance",
        "list",
        "validation_result",
        "quality_result1",
        "validation_result2",
        "validate_file_access",
        "data_dict",
        "mcp",
        "pd",
        "col_info",
        "json",
        "processed_data",
        "type",
        "parse_error",
        "df1",
        "os",
        "verify_data_processing_result",
        "comparison_file",
        "col",
        "len"
      ]
    },
    "read_excel_metadata": {
      "name": "read_excel_metadata",
      "lineno": 528,
      "args": [
        "file_path"
      ],
      "docstring": "增强版Excel文件元数据读取，支持智能编码检测和完整性验证。\n\nArgs:\n    file_path: Excel文件路径\n\nReturns:\n    dict: 包含文件元数据、编码信息、完整性验证结果的字典",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 527
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 539
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 544
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 547
        },
        {
          "type": "function",
          "name": "validate_excel_data_integrity",
          "args_count": 2,
          "lineno": 560
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 563
        },
        {
          "type": "method",
          "object": "cell_content_extractor",
          "method": "extract_cell_content_advanced",
          "args_count": 1,
          "lineno": 568
        },
        {
          "type": "method",
          "object": "openpyxl",
          "method": "load_workbook",
          "args_count": 1,
          "lineno": 573
        },
        {
          "type": "method",
          "object": "workbook",
          "method": "close",
          "args_count": 0,
          "lineno": 584
        },
        {
          "type": "function",
          "name": "_suggest_excel_read_parameters",
          "args_count": 2,
          "lineno": 587
        },
        {
          "type": "method",
          "object": "read_params",
          "method": "get",
          "args_count": 1,
          "lineno": 587
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 603
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_string_dtype"
          ],
          "args_count": 1,
          "lineno": 613
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_datetime64_any_dtype"
          ],
          "args_count": 1,
          "lineno": 617
        },
        {
          "type": "method",
          "object": "columns_metadata",
          "method": "append",
          "args_count": 1,
          "lineno": 627
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 552
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 557
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 593
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 625
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 638
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 639
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 640
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 687
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 693
        },
        {
          "type": "chained_method",
          "chain": [
            "pd",
            "api",
            "types",
            "is_numeric_dtype"
          ],
          "args_count": 1,
          "lineno": 598
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 638
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 642
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 686
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 663
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 678
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 660
        },
        {
          "type": "chained_method",
          "chain": [
            "index",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 670
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 675
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 655
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 672
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 678
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 656
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 663
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 669
        },
        {
          "type": "method",
          "object": "df",
          "method": "nunique",
          "args_count": 0,
          "lineno": 675
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 654
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 660
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 666
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 665
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 670
        }
      ],
      "imports_used": [
        "dict",
        "validate_excel_data_integrity",
        "traceback",
        "cell_content_extractor",
        "e",
        "quality_result",
        "data_quality_controller",
        "df",
        "col_meta",
        "summary",
        "encoding_info",
        "cell_analysis",
        "str",
        "columns_metadata",
        "sheet_obj",
        "Exception",
        "len",
        "detect_file_encoding",
        "workbook",
        "validation_result",
        "sheet_name",
        "openpyxl",
        "integrity_result",
        "sum",
        "read_result",
        "sheet_names",
        "validate_file_access",
        "_suggest_excel_read_parameters",
        "suggested_params",
        "mcp",
        "file_path",
        "pd",
        "smart_read_excel",
        "type",
        "col",
        "read_params",
        "sheets_info"
      ]
    },
    "run_excel_code": {
      "name": "run_excel_code",
      "lineno": 699,
      "args": [
        "file_path",
        "code",
        "sheet_name",
        "skiprows",
        "header",
        "usecols",
        "encoding",
        "auto_detect",
        "allow_file_write"
      ],
      "docstring": "增强版Excel代码执行工具，具备强化的pandas导入和错误处理机制。\n\nArgs:\n    code: 要执行的数据处理代码字符串\n    file_path: Excel文件路径\n    sheet_name: 可选，工作表名称\n    skiprows: 可选，跳过的行数\n    header: 可选，用作列名的行号。可以是整数、整数列表或None\n    usecols: 可选，要解析的列。可以是列名列表、列索引列表或字符串\n    encoding: 指定编码（可选，自动检测时忽略）\n    auto_detect: 是否启用智能检测和参数优化\n    allow_file_write: 是否允许在代码中写入文件\n    \nReturns:\n    dict: 执行结果或错误信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 698
        },
        {
          "type": "method",
          "object": "BLACKLIST",
          "method": "copy",
          "args_count": 0,
          "lineno": 728
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 749
        },
        {
          "type": "function",
          "name": "safe_import_pandas",
          "args_count": 0,
          "lineno": 792
        },
        {
          "type": "function",
          "name": "safe_import_numpy",
          "args_count": 0,
          "lineno": 793
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "update",
          "args_count": 1,
          "lineno": 925
        },
        {
          "type": "function",
          "name": "StringIO",
          "args_count": 0,
          "lineno": 963
        },
        {
          "type": "method",
          "object": "security_blacklist",
          "method": "extend",
          "args_count": 1,
          "lineno": 731
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 808
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 811
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "update",
          "args_count": 1,
          "lineno": 934
        },
        {
          "type": "method",
          "object": "builtins_dict",
          "method": "update",
          "args_count": 1,
          "lineno": 955
        },
        {
          "type": "function",
          "name": "SecureCodeExecutor",
          "args_count": 0,
          "lineno": 970
        },
        {
          "type": "method",
          "object": "local_vars",
          "method": "copy",
          "args_count": 0,
          "lineno": 977
        },
        {
          "type": "method",
          "object": "context",
          "method": "update",
          "args_count": 1,
          "lineno": 978
        },
        {
          "type": "method",
          "object": "secure_executor",
          "method": "execute_code",
          "args_count": 2,
          "lineno": 981
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 984
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1018
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1040
        },
        {
          "type": "method",
          "object": "encoding_info",
          "method": "get",
          "args_count": 1,
          "lineno": 825
        },
        {
          "type": "function",
          "name": "_suggest_excel_read_parameters",
          "args_count": 1,
          "lineno": 836
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "get",
          "args_count": 2,
          "lineno": 837
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 857
        },
        {
          "type": "method",
          "object": "pd_module",
          "method": "read_excel",
          "args_count": 1,
          "lineno": 900
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1026
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 1,
          "lineno": 1059
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1065
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1101
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 845
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 871
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 873
        },
        {
          "type": "function",
          "name": "__import__",
          "args_count": 1,
          "lineno": 936
        },
        {
          "type": "function",
          "name": "__import__",
          "args_count": 1,
          "lineno": 937
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 986
        },
        {
          "type": "method",
          "object": "data_cleaner",
          "method": "suggest_cleaning_operations",
          "args_count": 1,
          "lineno": 998
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1010
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1011
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1012
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1013
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1014
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1034
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1048
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1052
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1053
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1069
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1077
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "extend",
          "args_count": 1,
          "lineno": 1083
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1105
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1107
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1109
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1111
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1112
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "append",
          "args_count": 1,
          "lineno": 1113
        },
        {
          "type": "method",
          "object": "importlib",
          "method": "invalidate_caches",
          "args_count": 0,
          "lineno": 770
        },
        {
          "type": "method",
          "object": "importlib",
          "method": "invalidate_caches",
          "args_count": 0,
          "lineno": 785
        },
        {
          "type": "method",
          "object": "suggestions",
          "method": "get",
          "args_count": 2,
          "lineno": 840
        },
        {
          "type": "method",
          "object": "recommended_params",
          "method": "copy",
          "args_count": 0,
          "lineno": 849
        },
        {
          "type": "method",
          "object": "final_params",
          "method": "update",
          "args_count": 1,
          "lineno": 850
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 853
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 863
        },
        {
          "type": "method",
          "object": "read_kwargs",
          "method": "copy",
          "args_count": 0,
          "lineno": 865
        },
        {
          "type": "function",
          "name": "smart_read_excel",
          "args_count": 1,
          "lineno": 867
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 880
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1011
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1045
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1068
        },
        {
          "type": "method",
          "object": "error_msg",
          "method": "lower",
          "args_count": 0,
          "lineno": 1076
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1092
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1093
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1119
        },
        {
          "type": "method",
          "object": "stdout_capture",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1120
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 766
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 782
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 863
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 991
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 992
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 993
        },
        {
          "type": "chained_method",
          "chain": [
            "processed_df",
            "dtypes",
            "to_dict"
          ],
          "args_count": 0,
          "lineno": 993
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 994
        },
        {
          "type": "function",
          "name": "hasattr",
          "args_count": 2,
          "lineno": 999
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1043
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1046
        },
        {
          "type": "method",
          "object": "result",
          "method": "to_dict",
          "args_count": 0,
          "lineno": 1046
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 1117
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 862
        },
        {
          "type": "method",
          "object": "read_result",
          "method": "get",
          "args_count": 2,
          "lineno": 879
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 906
        },
        {
          "type": "method",
          "object": "processed_df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 994
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 0,
          "lineno": 1046
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 774
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 789
        },
        {
          "type": "method",
          "object": "processed_df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 992
        }
      ],
      "imports_used": [
        "getattr",
        "security_blacklist",
        "code",
        "builtins_dict",
        "encoding",
        "max",
        "min",
        "processed_df",
        "forbidden",
        "pd_error",
        "StringIO",
        "NameError",
        "sheet_name",
        "_suggest_excel_read_parameters",
        "fallback_params",
        "SecureCodeExecutor",
        "abs",
        "is_multi_level",
        "cleaning_suggestions",
        "usecols",
        "old_stdout",
        "allow_file_write",
        "isinstance",
        "len",
        "read_params",
        "importlib",
        "df",
        "execution_context",
        "read_kwargs",
        "BLACKLIST",
        "encoding_info",
        "quality_precheck",
        "str",
        "pd_module",
        "recommended_params",
        "Exception",
        "hasattr",
        "detect_file_encoding",
        "validation_result",
        "validate_file_access",
        "enumerate",
        "type",
        "unnamed_cols",
        "__import__",
        "global_vars",
        "secure_executor",
        "np_local",
        "response",
        "col",
        "dict",
        "round",
        "TypeError",
        "suggestions",
        "np_module",
        "np_error",
        "e",
        "safe_import_pandas",
        "skiprows",
        "read_info",
        "data_quality_controller",
        "open",
        "error_msg",
        "post_quality_check",
        "list",
        "sum",
        "read_result",
        "KeyError",
        "context",
        "stdout_capture",
        "locals",
        "result",
        "execution_result",
        "local_vars",
        "header",
        "traceback",
        "zip",
        "range",
        "globals",
        "auto_detect",
        "e2",
        "ImportError",
        "print",
        "IndexError",
        "sys",
        "final_params",
        "float",
        "ValueError",
        "int",
        "mcp",
        "file_path",
        "smart_read_excel",
        "safe_import_numpy",
        "bool",
        "data_cleaner",
        "pd_local"
      ]
    },
    "run_code": {
      "name": "run_code",
      "lineno": 1130,
      "args": [
        "code",
        "file_path"
      ],
      "docstring": "在CSV文件上执行数据处理代码，具备安全检查功能。\n\nArgs:\n    code: 要执行的数据处理代码字符串。\n    file_path: CSV文件路径。\n\nReturns:\n    dict: 执行结果，包含数据、输出或错误信息。",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1129
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 1151
        },
        {
          "type": "function",
          "name": "StringIO",
          "args_count": 0,
          "lineno": 1198
        },
        {
          "type": "function",
          "name": "detect_file_encoding",
          "args_count": 1,
          "lineno": 1162
        },
        {
          "type": "method",
          "object": "encoding_info",
          "method": "get",
          "args_count": 2,
          "lineno": 1163
        },
        {
          "type": "function",
          "name": "SecureCodeExecutor",
          "args_count": 0,
          "lineno": 1203
        },
        {
          "type": "method",
          "object": "secure_executor",
          "method": "execute_code",
          "args_count": 2,
          "lineno": 1213
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1224
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1228
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1167
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1230
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1265
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1266
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1219
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1220
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1238
        },
        {
          "type": "method",
          "object": "captured_output",
          "method": "getvalue",
          "args_count": 0,
          "lineno": 1219
        },
        {
          "type": "chained_method",
          "chain": [
            "result",
            "columns",
            "tolist"
          ],
          "args_count": 0,
          "lineno": 1234
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1176
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1192
        },
        {
          "type": "method",
          "object": "execution_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1218
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1242
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1244
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1249
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 1,
          "lineno": 1235
        },
        {
          "type": "chained_method",
          "chain": [
            "result",
            "dtypes",
            "astype"
          ],
          "args_count": 1,
          "lineno": 1236
        },
        {
          "type": "function",
          "name": "type",
          "args_count": 1,
          "lineno": 1248
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1185
        },
        {
          "type": "method",
          "object": "result",
          "method": "head",
          "args_count": 1,
          "lineno": 1243
        }
      ],
      "imports_used": [
        "dict",
        "execution_result",
        "traceback",
        "code",
        "UnicodeDecodeError",
        "e",
        "last_error",
        "UnicodeError",
        "df",
        "sys",
        "BLACKLIST",
        "encoding_info",
        "forbidden",
        "result_data",
        "StringIO",
        "str",
        "captured_output",
        "Exception",
        "detect_file_encoding",
        "validation_result",
        "validate_file_access",
        "output",
        "mcp",
        "file_path",
        "SecureCodeExecutor",
        "pd",
        "context",
        "common_encodings",
        "type",
        "enc",
        "old_stdout",
        "secure_executor",
        "detected_encoding",
        "result",
        "isinstance",
        "len"
      ]
    },
    "bar_chart_to_html": {
      "name": "bar_chart_to_html",
      "lineno": 1272,
      "args": [
        "categories",
        "values",
        "title"
      ],
      "docstring": "Generate interactive HTML bar chart using Chart.js template.\n\nArgs:\n    categories: List of category names for x-axis\n    values: List of numeric values for y-axis\n    title: Chart title (default: \"Interactive Chart\")\n    x_label: Label for X-axis (default: \"Categories\")\n    y_label: Label for Y-axis (default: \"Values\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> bar_chart_to_html(\n    ...     categories=['Electronics', 'Clothing', 'Home Goods', 'Sports Equipment'],\n    ...     values=[120000, 85000, 95000, 60000],\n    ...     title=\"Q1 Sales by Product Category\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1271
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1310
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1352
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1353
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1355
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1357
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1302
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1302
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1310
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1352
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1355
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1371
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1310
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1312
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1313
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1331
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1352
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1355
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1360
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1361
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1318
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1366
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1306
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1306
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1342
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1334
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1339
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1336
        }
      ],
      "imports_used": [
        "dict",
        "e",
        "all_values",
        "title",
        "f",
        "open",
        "str",
        "template_path",
        "Exception",
        "values",
        "__file__",
        "list",
        "time",
        "int",
        "mcp",
        "template",
        "filename",
        "json",
        "categories",
        "all_categories",
        "colors",
        "timestamp",
        "os",
        "len",
        "filepath",
        "charts_dir"
      ]
    },
    "pie_chart_to_html": {
      "name": "pie_chart_to_html",
      "lineno": 1376,
      "args": [
        "labels",
        "values",
        "title"
      ],
      "docstring": "Generate interactive HTML pie chart using Chart.js template.\n\nArgs:\n    labels: List of label names for each pie slice\n    values: List of numeric values for each slice\n    title: Chart title (default: \"Interactive Pie Chart\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> pie_chart_to_html(\n    ...     labels=['Electronics', 'Clothing', 'Home Goods'],\n    ...     values=[120000, 85000, 95000],\n    ...     title=\"Q1 Sales Distribution\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1375
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1411
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1448
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1449
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1451
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1453
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1403
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1403
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1411
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1448
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1451
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1467
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1411
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1413
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1414
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1430
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1448
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1451
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1456
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1457
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1419
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1462
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1407
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1407
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1441
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1433
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1438
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1435
        }
      ],
      "imports_used": [
        "dict",
        "e",
        "title",
        "f",
        "open",
        "str",
        "template_path",
        "Exception",
        "values",
        "__file__",
        "list",
        "time",
        "int",
        "mcp",
        "template",
        "filename",
        "json",
        "colors",
        "timestamp",
        "os",
        "labels",
        "len",
        "filepath",
        "charts_dir"
      ]
    },
    "line_chart_to_html": {
      "name": "line_chart_to_html",
      "lineno": 1471,
      "args": [
        "labels",
        "datasets",
        "title"
      ],
      "docstring": "Generate interactive HTML line chart using Chart.js template.\n\nArgs:\n    labels: List of label names for x-axis\n    datasets: List of datasets, each containing:\n        - label: Name of the dataset\n        - data: List of numeric values (3 dimensions: [x, y, z])\n    title: Chart title (default: \"Interactive Line Chart\")\n    \nReturns:\n    dict: Contains file path and status information\n    \nExample:\n    >>> line_chart_to_html(\n    ...     labels=['Jan', 'Feb', 'Mar'],\n    ...     datasets=[\n    ...         {'label': 'Sales', 'data': [[100, 200, 300], [150, 250, 350], [200, 300, 400]]},\n    ...         {'label': 'Expenses', 'data': [[50, 100, 150], [75, 125, 175], [100, 150, 200]]}\n    ...     ],\n    ...     title=\"Monthly Performance\"\n    ... )\n    {\n        \"status\": \"SUCCESS\",\n        \"filepath\": \"/absolute/path/to/plotXXXXXX.html\",\n    }",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1470
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1511
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1588
        },
        {
          "type": "method",
          "object": "os",
          "method": "makedirs",
          "args_count": 1,
          "lineno": 1589
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1591
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "join"
          ],
          "args_count": 2,
          "lineno": 1593
        },
        {
          "type": "function",
          "name": "all",
          "args_count": 1,
          "lineno": 1503
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1511
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "dirname"
          ],
          "args_count": 1,
          "lineno": 1588
        },
        {
          "type": "function",
          "name": "int",
          "args_count": 1,
          "lineno": 1591
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1607
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1511
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1513
        },
        {
          "type": "method",
          "object": "f",
          "method": "read",
          "args_count": 0,
          "lineno": 1514
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "abspath"
          ],
          "args_count": 1,
          "lineno": 1588
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 1591
        },
        {
          "type": "function",
          "name": "open",
          "args_count": 2,
          "lineno": 1596
        },
        {
          "type": "method",
          "object": "f",
          "method": "write",
          "args_count": 1,
          "lineno": 1597
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1519
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1602
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1503
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1503
        },
        {
          "type": "method",
          "object": "template",
          "method": "replace",
          "args_count": 2,
          "lineno": 1542
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1578
        },
        {
          "type": "method",
          "object": "json",
          "method": "dumps",
          "args_count": 1,
          "lineno": 1544
        }
      ],
      "imports_used": [
        "dict",
        "datasets",
        "e",
        "charts_dir",
        "title",
        "f",
        "open",
        "str",
        "d",
        "template_path",
        "Exception",
        "__file__",
        "list",
        "dataset",
        "time",
        "int",
        "mcp",
        "template",
        "chart_data",
        "filename",
        "json",
        "timestamp",
        "os",
        "labels",
        "len",
        "filepath",
        "all"
      ]
    },
    "validate_data_quality": {
      "name": "validate_data_quality",
      "lineno": 1612,
      "args": [
        "file_path"
      ],
      "docstring": "验证数据质量并提供改进建议\n\nArgs:\n    file_path: 数据文件路径\n    \nReturns:\n    dict: 数据质量报告和改进建议",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1611
        },
        {
          "type": "function",
          "name": "validate_file_access",
          "args_count": 1,
          "lineno": 1622
        },
        {
          "type": "method",
          "object": "pd",
          "method": "read_csv",
          "args_count": 1,
          "lineno": 1626
        },
        {
          "type": "function",
          "name": "create_success_response",
          "args_count": 2,
          "lineno": 1660
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 1663
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1630
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1631
        },
        {
          "type": "chained_method",
          "chain": [
            "df",
            "dtypes",
            "astype"
          ],
          "args_count": 1,
          "lineno": 1643
        },
        {
          "type": "method",
          "object": "df",
          "method": "memory_usage",
          "args_count": 0,
          "lineno": 1632
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 1640
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1641
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1657
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1665
        },
        {
          "type": "method",
          "object": "traceback",
          "method": "format_exc",
          "args_count": 0,
          "lineno": 1666
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1635
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1636
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1637
        },
        {
          "type": "method",
          "object": "df",
          "method": "duplicated",
          "args_count": 0,
          "lineno": 1641
        },
        {
          "type": "method",
          "object": "df",
          "method": "isnull",
          "args_count": 0,
          "lineno": 1637
        }
      ],
      "imports_used": [
        "dict",
        "quality_report",
        "df",
        "Exception",
        "len",
        "create_success_response",
        "traceback",
        "validation_result",
        "dtype",
        "pd",
        "col",
        "create_error_response",
        "e",
        "validate_file_access",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "suggest_excel_read_parameters_tool": {
      "name": "suggest_excel_read_parameters_tool",
      "lineno": 1672,
      "args": [
        "file_path"
      ],
      "docstring": "智能推荐Excel文件读取参数\n\nArgs:\n    file_path: Excel文件的绝对路径\n    \nReturns:\n    dict: 包含推荐参数的结构化响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1671
        },
        {
          "type": "function",
          "name": "suggest_excel_read_parameters",
          "args_count": 1,
          "lineno": 1681
        }
      ],
      "imports_used": [
        "dict",
        "suggest_excel_read_parameters",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "detect_excel_file_structure_tool": {
      "name": "detect_excel_file_structure_tool",
      "lineno": 1684,
      "args": [
        "file_path"
      ],
      "docstring": "检测Excel文件结构\n\nArgs:\n    file_path: Excel文件的绝对路径\n    \nReturns:\n    dict: 包含文件结构信息的响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1683
        },
        {
          "type": "function",
          "name": "detect_excel_file_structure",
          "args_count": 1,
          "lineno": 1693
        }
      ],
      "imports_used": [
        "dict",
        "detect_excel_file_structure",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "create_excel_read_template_tool": {
      "name": "create_excel_read_template_tool",
      "lineno": 1696,
      "args": [
        "file_path",
        "sheet_name",
        "skiprows",
        "header",
        "usecols"
      ],
      "docstring": "生成Excel读取代码模板\n\nArgs:\n    file_path: Excel文件的绝对路径\n    sheet_name: 工作表名称\n    skiprows: 跳过的行数\n    header: 标题行位置\n    usecols: 使用的列\n    \nReturns:\n    dict: 包含代码模板的响应",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1695
        },
        {
          "type": "function",
          "name": "create_excel_read_template",
          "args_count": 5,
          "lineno": 1709
        }
      ],
      "imports_used": [
        "dict",
        "create_excel_read_template",
        "header",
        "sheet_name",
        "usecols",
        "str",
        "int",
        "mcp",
        "file_path",
        "skiprows"
      ]
    },
    "comprehensive_data_verification_tool": {
      "name": "comprehensive_data_verification_tool",
      "lineno": 1712,
      "args": [
        "file_path",
        "reference_file",
        "verification_level",
        "save_report"
      ],
      "docstring": "综合数据验证和核准工具\n\n提供全面的Excel数据验证、质量评估和比对核准功能。\n支持单文件验证和双文件比较验证模式。\n\nArgs:\n    file_path: 要验证的Excel文件路径\n    reference_file: 参考文件路径（可选，用于比较验证）\n    verification_level: 验证级别\n        - \"basic\": 基础验证（文件结构、基本统计）\n        - \"detailed\": 详细验证（包含数据质量分析）\n        - \"comprehensive\": 综合验证（包含异常检测和深度分析）\n    save_report: 是否保存验证报告到本地\n\nReturns:\n    dict: 包含以下字段的验证结果\n        - overall_status: 总体状态 (EXCELLENT/GOOD/ACCEPTABLE/POOR/CRITICAL/FAILED)\n        - data_quality_score: 数据质量得分 (0-100)\n        - file_analysis: 文件结构分析结果\n        - data_integrity: 数据完整性验证结果\n        - comparison_results: 比较验证结果（如果提供了参考文件）\n        - recommendations: 改进建议列表\n        - detailed_report: 详细报告（详细和综合级别）\n\n功能特点:\n1. 多层次验证：支持基础、详细、综合三个验证级别\n2. 智能编码检测：自动检测文件编码并优化读取\n3. 数据质量评估：计算综合质量得分\n4. 异常检测：识别异常值和数据模式\n5. 比较验证：支持与参考文件的详细比较\n6. 报告生成：自动生成验证报告并可保存\n7. 建议系统：提供针对性的数据改进建议\n\n使用示例:\n- 基础验证: comprehensive_data_verification_tool(\"data.xlsx\", verification_level=\"basic\")\n- 详细验证: comprehensive_data_verification_tool(\"data.xlsx\", verification_level=\"detailed\")\n- 比较验证: comprehensive_data_verification_tool(\"data.xlsx\", \"reference.xlsx\", \"comprehensive\")",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1711
        },
        {
          "type": "function",
          "name": "ComprehensiveDataVerifier",
          "args_count": 0,
          "lineno": 1774
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "comprehensive_excel_verification",
          "args_count": 0,
          "lineno": 1777
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1759
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 1789
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 1,
          "lineno": 1790
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1791
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1792
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1795
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1766
        },
        {
          "type": "method",
          "object": "verification_result",
          "method": "get",
          "args_count": 2,
          "lineno": 1795
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1803
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "file_path",
        "len",
        "verification_result",
        "ComprehensiveDataVerifier",
        "bool",
        "mcp",
        "e",
        "save_report",
        "os",
        "verification_level",
        "str",
        "verifier",
        "reference_file"
      ]
    },
    "batch_data_verification_tool": {
      "name": "batch_data_verification_tool",
      "lineno": 1812,
      "args": [
        "file_paths",
        "verification_level",
        "save_reports"
      ],
      "docstring": "批量数据验证工具\n\n对多个Excel文件进行批量验证和质量评估。\n\nArgs:\n    file_paths: Excel文件路径列表\n    verification_level: 验证级别 (\"basic\", \"detailed\", \"comprehensive\")\n    save_reports: 是否保存验证报告\n\nReturns:\n    dict: 批量验证结果\n        - overall_summary: 总体摘要\n        - individual_results: 各文件验证结果\n        - quality_ranking: 质量排名\n        - batch_recommendations: 批量建议",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1811
        },
        {
          "type": "function",
          "name": "ComprehensiveDataVerifier",
          "args_count": 0,
          "lineno": 1841
        },
        {
          "type": "function",
          "name": "sorted",
          "args_count": 1,
          "lineno": 1890
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1844
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 1835
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "exists"
          ],
          "args_count": 1,
          "lineno": 1858
        },
        {
          "type": "function",
          "name": "max",
          "args_count": 1,
          "lineno": 1899
        },
        {
          "type": "function",
          "name": "min",
          "args_count": 1,
          "lineno": 1900
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1901
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1902
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1903
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1904
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1905
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 1915
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1915
        },
        {
          "type": "method",
          "object": "verifier",
          "method": "comprehensive_excel_verification",
          "args_count": 0,
          "lineno": 1859
        },
        {
          "type": "method",
          "object": "quality_scores",
          "method": "append",
          "args_count": 1,
          "lineno": 1866
        },
        {
          "type": "function",
          "name": "sum",
          "args_count": 1,
          "lineno": 1898
        },
        {
          "type": "function",
          "name": "len",
          "args_count": 1,
          "lineno": 1898
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1884
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1930
        },
        {
          "type": "chained_method",
          "chain": [
            "os",
            "path",
            "basename"
          ],
          "args_count": 1,
          "lineno": 1867
        },
        {
          "type": "method",
          "object": "result",
          "method": "get",
          "args_count": 2,
          "lineno": 1869
        },
        {
          "type": "method",
          "object": "result",
          "method": "get",
          "args_count": 2,
          "lineno": 1870
        }
      ],
      "imports_used": [
        "dict",
        "file_paths",
        "save_reports",
        "e",
        "verifier",
        "max",
        "min",
        "verification_level",
        "str",
        "item",
        "Exception",
        "avg_score",
        "list",
        "batch_results",
        "x",
        "quality_scores",
        "sum",
        "scores",
        "mcp",
        "file_path",
        "s",
        "ComprehensiveDataVerifier",
        "bool",
        "sorted",
        "os",
        "result",
        "isinstance",
        "len"
      ]
    },
    "excel_read_enhanced": {
      "name": "excel_read_enhanced",
      "lineno": 1935,
      "args": [
        "file_path",
        "sheet_name",
        "start_row",
        "end_row",
        "start_col",
        "end_col",
        "use_go_service"
      ],
      "docstring": "增强版 Excel 读取工具，集成 Go excelize 库提供高性能处理\n\nArgs:\n    file_path: Excel 文件路径\n    sheet_name: 工作表名称（可选）\n    start_row: 起始行号（可选）\n    end_row: 结束行号（可选）\n    start_col: 起始列（如 'A'，可选）\n    end_col: 结束列（如 'Z'，可选）\n    use_go_service: 是否优先使用 Go 服务（默认 True）\n    \nReturns:\n    dict: 读取结果，包含数据和性能信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1934
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 1960
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 0,
          "lineno": 1961
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 1974
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "end_col",
        "start_col",
        "use_go_service",
        "sheet_name",
        "start_row",
        "bool",
        "e",
        "processor",
        "get_excel_processor",
        "end_row",
        "result",
        "str",
        "int",
        "mcp",
        "file_path"
      ]
    },
    "excel_write_enhanced": {
      "name": "excel_write_enhanced",
      "lineno": 1980,
      "args": [
        "file_path",
        "data",
        "sheet_name",
        "start_row",
        "start_col",
        "use_go_service"
      ],
      "docstring": "增强版 Excel 写入工具，集成 Go excelize 库提供高性能处理\n\nArgs:\n    file_path: Excel 文件路径\n    data: 要写入的数据（字典列表格式）\n    sheet_name: 工作表名称（可选）\n    start_row: 起始行号（可选）\n    start_col: 起始列（如 'A'，可选）\n    use_go_service: 是否优先使用 Go 服务（默认 True）\n    \nReturns:\n    dict: 写入结果，包含性能信息",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 1979
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2010
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 0,
          "lineno": 2011
        },
        {
          "type": "function",
          "name": "isinstance",
          "args_count": 2,
          "lineno": 2003
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2023
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "start_col",
        "list",
        "use_go_service",
        "sheet_name",
        "start_row",
        "bool",
        "e",
        "processor",
        "get_excel_processor",
        "data",
        "result",
        "isinstance",
        "str",
        "int",
        "mcp",
        "file_path"
      ]
    },
    "excel_chart_enhanced": {
      "name": "excel_chart_enhanced",
      "lineno": 2029,
      "args": [
        "file_path",
        "chart_type",
        "data_range",
        "sheet_name",
        "title",
        "x_axis_title",
        "y_axis_title"
      ],
      "docstring": "增强版 Excel 图表创建工具，使用 Go excelize 库提供高性能图表生成\n\nArgs:\n    file_path: Excel 文件路径\n    chart_type: 图表类型（'col', 'line', 'pie', 'bar', 'area', 'scatter' 等）\n    data_range: 数据范围（如 'A1:B10'）\n    sheet_name: 工作表名称（可选）\n    title: 图表标题（可选）\n    x_axis_title: X轴标题（可选）\n    y_axis_title: Y轴标题（可选）\n    \nReturns:\n    dict: 图表创建结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2028
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2063
        },
        {
          "type": "method",
          "object": "processor",
          "method": "create_chart_enhanced",
          "args_count": 0,
          "lineno": 2064
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2077
        }
      ],
      "imports_used": [
        "dict",
        "title",
        "Exception",
        "y_axis_title",
        "sheet_name",
        "valid_chart_types",
        "data_range",
        "chart_type",
        "e",
        "processor",
        "result",
        "str",
        "get_excel_processor",
        "mcp",
        "file_path",
        "x_axis_title"
      ]
    },
    "excel_info_enhanced": {
      "name": "excel_info_enhanced",
      "lineno": 2083,
      "args": [
        "file_path"
      ],
      "docstring": "增强版 Excel 文件信息获取工具，使用 Go excelize 库提供详细文件分析\n\nArgs:\n    file_path: Excel 文件路径\n    \nReturns:\n    dict: 详细的文件信息，包括工作表、行列数等",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2082
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2094
        },
        {
          "type": "method",
          "object": "processor",
          "method": "get_file_info_enhanced",
          "args_count": 1,
          "lineno": 2095
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2100
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "e",
        "processor",
        "result",
        "str",
        "get_excel_processor",
        "mcp",
        "file_path"
      ]
    },
    "excel_performance_comparison": {
      "name": "excel_performance_comparison",
      "lineno": 2106,
      "args": [
        "file_path",
        "operation",
        "test_data"
      ],
      "docstring": "Excel 性能对比工具，比较 Go 服务和 pandas 的性能差异\n\nArgs:\n    file_path: Excel 文件路径\n    operation: 操作类型（'read' 或 'write'）\n    test_data: 测试数据（写入操作时需要）\n    \nReturns:\n    dict: 性能对比结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2105
        },
        {
          "type": "function",
          "name": "get_excel_processor",
          "args_count": 0,
          "lineno": 2133
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2137
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 1,
          "lineno": 2138
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2142
        },
        {
          "type": "method",
          "object": "processor",
          "method": "read_excel_enhanced",
          "args_count": 1,
          "lineno": 2143
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2139
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2144
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2162
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2148
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2149
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2153
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2154
        },
        {
          "type": "method",
          "object": "tempfile",
          "method": "NamedTemporaryFile",
          "args_count": 0,
          "lineno": 2182
        },
        {
          "type": "method",
          "object": "tempfile",
          "method": "NamedTemporaryFile",
          "args_count": 0,
          "lineno": 2183
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2186
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 2,
          "lineno": 2187
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2191
        },
        {
          "type": "method",
          "object": "processor",
          "method": "write_excel_enhanced",
          "args_count": 2,
          "lineno": 2192
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2188
        },
        {
          "type": "method",
          "object": "time",
          "method": "time",
          "args_count": 0,
          "lineno": 2193
        },
        {
          "type": "method",
          "object": "os",
          "method": "unlink",
          "args_count": 1,
          "lineno": 2197
        },
        {
          "type": "method",
          "object": "os",
          "method": "unlink",
          "args_count": 1,
          "lineno": 2198
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2218
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2239
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2150
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2155
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2204
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2205
        },
        {
          "type": "function",
          "name": "round",
          "args_count": 2,
          "lineno": 2209
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2210
        },
        {
          "type": "method",
          "object": "go_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2206
        },
        {
          "type": "method",
          "object": "pandas_result",
          "method": "get",
          "args_count": 2,
          "lineno": 2211
        }
      ],
      "imports_used": [
        "dict",
        "round",
        "results",
        "operation",
        "e",
        "test_data",
        "tempfile",
        "get_excel_processor",
        "pandas_time",
        "str",
        "Exception",
        "list",
        "go_result",
        "time",
        "tmp1",
        "mcp",
        "pandas_result",
        "file_path",
        "go_time",
        "start_time",
        "tmp2",
        "os",
        "processor",
        "speedup"
      ]
    },
    "parse_formula": {
      "name": "parse_formula",
      "lineno": 2246,
      "args": [
        "formula",
        "validate_security"
      ],
      "docstring": "解析 Excel 公式\n\nArgs:\n    formula: Excel 公式字符串\n    validate_security: 是否进行安全验证\n    \nReturns:\n    str: JSON 格式的解析结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2245
        },
        {
          "type": "function",
          "name": "parse_excel_formula",
          "args_count": 2,
          "lineno": 2256
        }
      ],
      "imports_used": [
        "parse_excel_formula",
        "formula",
        "bool",
        "validate_security",
        "str",
        "mcp"
      ]
    },
    "compile_workbook": {
      "name": "compile_workbook",
      "lineno": 2259,
      "args": [
        "file_path",
        "output_format"
      ],
      "docstring": "编译 Excel 工作簿为代码\n\nArgs:\n    file_path: Excel 文件路径\n    output_format: 输出格式 ('python' 或 'json')\n    \nReturns:\n    str: JSON 格式的编译结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2258
        },
        {
          "type": "function",
          "name": "compile_excel_workbook",
          "args_count": 2,
          "lineno": 2269
        }
      ],
      "imports_used": [
        "output_format",
        "compile_excel_workbook",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "execute_formula": {
      "name": "execute_formula",
      "lineno": 2272,
      "args": [
        "formula",
        "context"
      ],
      "docstring": "执行 Excel 公式\n\nArgs:\n    formula: Excel 公式字符串\n    context: JSON 格式的上下文数据\n    \nReturns:\n    str: JSON 格式的执行结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2271
        },
        {
          "type": "function",
          "name": "execute_excel_formula",
          "args_count": 2,
          "lineno": 2282
        }
      ],
      "imports_used": [
        "context",
        "formula",
        "execute_excel_formula",
        "str",
        "mcp"
      ]
    },
    "analyze_dependencies": {
      "name": "analyze_dependencies",
      "lineno": 2285,
      "args": [
        "file_path"
      ],
      "docstring": "分析 Excel 文件的公式依赖关系\n\nArgs:\n    file_path: Excel 文件路径\n    \nReturns:\n    str: JSON 格式的依赖分析结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2284
        },
        {
          "type": "function",
          "name": "analyze_excel_dependencies",
          "args_count": 1,
          "lineno": 2294
        }
      ],
      "imports_used": [
        "analyze_excel_dependencies",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "validate_formula": {
      "name": "validate_formula",
      "lineno": 2297,
      "args": [
        "formula"
      ],
      "docstring": "验证 Excel 公式的安全性和有效性\n\nArgs:\n    formula: Excel 公式字符串\n    \nReturns:\n    str: JSON 格式的验证结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2296
        },
        {
          "type": "function",
          "name": "validate_excel_formula",
          "args_count": 1,
          "lineno": 2306
        }
      ],
      "imports_used": [
        "validate_excel_formula",
        "str",
        "mcp",
        "formula"
      ]
    },
    "enhanced_data_quality_check": {
      "name": "enhanced_data_quality_check",
      "lineno": 2311,
      "args": [
        "file_path",
        "quality_level"
      ],
      "docstring": "增强的Excel数据质量检查工具\n\nArgs:\n    file_path: Excel文件路径\n    quality_level: 质量检查级别 (\"basic\", \"standard\", \"comprehensive\")\n    \nReturns:\n    dict: 数据质量检查结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2310
        },
        {
          "type": "method",
          "object": "data_quality_controller",
          "method": "comprehensive_quality_check",
          "args_count": 2,
          "lineno": 2322
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2324
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2324
        }
      ],
      "imports_used": [
        "dict",
        "data_quality_controller",
        "Exception",
        "create_error_response",
        "quality_level",
        "e",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "extract_cell_content_advanced": {
      "name": "extract_cell_content_advanced",
      "lineno": 2328,
      "args": [
        "file_path",
        "cell_range",
        "sheet_name",
        "extract_type"
      ],
      "docstring": "高级单元格内容提取工具\n\nArgs:\n    file_path: Excel文件路径\n    cell_range: 单元格范围 (如 \"A1:C10\")\n    sheet_name: 工作表名称\n    extract_type: 提取类型 (\"all\", \"text\", \"numbers\", \"formulas\", \"formatted\")\n    \nReturns:\n    dict: 提取的单元格内容",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2327
        },
        {
          "type": "method",
          "object": "cell_content_extractor",
          "method": "extract_cell_content_advanced",
          "args_count": 4,
          "lineno": 2342
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2346
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2346
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "extract_type",
        "sheet_name",
        "cell_range",
        "cell_content_extractor",
        "create_error_response",
        "e",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "convert_character_formats": {
      "name": "convert_character_formats",
      "lineno": 2350,
      "args": [
        "file_path",
        "conversion_rules",
        "output_path"
      ],
      "docstring": "字符格式自动化转换工具\n\nArgs:\n    file_path: Excel文件路径\n    conversion_rules: 转换规则字典\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 转换结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2349
        },
        {
          "type": "method",
          "object": "character_converter",
          "method": "batch_character_conversion",
          "args_count": 3,
          "lineno": 2362
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2366
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2366
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "character_converter",
        "create_error_response",
        "e",
        "conversion_rules",
        "str",
        "output_path",
        "mcp",
        "file_path"
      ]
    },
    "extract_multi_condition_data": {
      "name": "extract_multi_condition_data",
      "lineno": 2370,
      "args": [
        "file_path",
        "conditions",
        "sheet_name"
      ],
      "docstring": "多条件数据提取工具\n\nArgs:\n    file_path: Excel文件路径\n    conditions: 条件列表\n    sheet_name: 工作表名称\n    \nReturns:\n    dict: 提取的数据",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2369
        },
        {
          "type": "method",
          "object": "multi_condition_extractor",
          "method": "extract_with_multiple_conditions",
          "args_count": 3,
          "lineno": 2382
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2386
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2386
        }
      ],
      "imports_used": [
        "dict",
        "multi_condition_extractor",
        "Exception",
        "conditions",
        "list",
        "sheet_name",
        "create_error_response",
        "e",
        "str",
        "mcp",
        "file_path"
      ]
    },
    "merge_multiple_tables": {
      "name": "merge_multiple_tables",
      "lineno": 2390,
      "args": [
        "file_paths",
        "merge_config",
        "output_path"
      ],
      "docstring": "多表格数据合并工具\n\nArgs:\n    file_paths: Excel文件路径列表\n    merge_config: 合并配置\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 合并结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2389
        },
        {
          "type": "method",
          "object": "multi_table_merger",
          "method": "merge_multiple_excel_files",
          "args_count": 3,
          "lineno": 2402
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2406
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2406
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "list",
        "file_paths",
        "create_error_response",
        "e",
        "multi_table_merger",
        "str",
        "output_path",
        "mcp",
        "merge_config"
      ]
    },
    "clean_excel_data": {
      "name": "clean_excel_data",
      "lineno": 2410,
      "args": [
        "file_path",
        "cleaning_options",
        "output_path"
      ],
      "docstring": "Excel数据清洗工具\n\nArgs:\n    file_path: Excel文件路径\n    cleaning_options: 清洗选项\n    output_path: 输出文件路径\n    \nReturns:\n    dict: 清洗结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2409
        },
        {
          "type": "method",
          "object": "data_cleaner",
          "method": "clean_excel_data",
          "args_count": 0,
          "lineno": 2422
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2428
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2428
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "cleaning_options",
        "create_error_response",
        "data_cleaner",
        "e",
        "str",
        "output_path",
        "mcp",
        "file_path"
      ]
    },
    "batch_process_excel_files": {
      "name": "batch_process_excel_files",
      "lineno": 2432,
      "args": [
        "file_paths",
        "processing_config"
      ],
      "docstring": "批量Excel文件处理工具\n\nArgs:\n    file_paths: Excel文件路径列表\n    processing_config: 处理配置\n    \nReturns:\n    dict: 批量处理结果",
      "calls": [
        {
          "type": "method",
          "object": "mcp",
          "method": "tool",
          "args_count": 0,
          "lineno": 2431
        },
        {
          "type": "method",
          "object": "batch_processor",
          "method": "batch_process_files",
          "args_count": 2,
          "lineno": 2443
        },
        {
          "type": "function",
          "name": "create_error_response",
          "args_count": 2,
          "lineno": 2447
        },
        {
          "type": "function",
          "name": "str",
          "args_count": 1,
          "lineno": 2447
        }
      ],
      "imports_used": [
        "dict",
        "Exception",
        "list",
        "processing_config",
        "file_paths",
        "create_error_response",
        "e",
        "str",
        "batch_processor",
        "mcp"
      ]
    }
  },
  "modules_info": {
    "formulas_tools": {
      "classes": {
        "FormulaTemplateManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 57
            },
            {
              "name": "_initialize_templates",
              "args": [
                "self"
              ],
              "lineno": 61
            },
            {
              "name": "get_templates_by_category",
              "args": [
                "self",
                "category"
              ],
              "lineno": 190
            },
            {
              "name": "search_templates",
              "args": [
                "self",
                "keyword"
              ],
              "lineno": 194
            },
            {
              "name": "get_template_by_name",
              "args": [
                "self",
                "name"
              ],
              "lineno": 212
            },
            {
              "name": "get_templates",
              "args": [
                "self",
                "category",
                "difficulty"
              ],
              "lineno": 223
            },
            {
              "name": "get_available_categories",
              "args": [
                "self"
              ],
              "lineno": 260
            },
            {
              "name": "find_matching_templates",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 264
            },
            {
              "name": "_estimate_difficulty",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 285
            },
            {
              "name": "_calculate_similarity",
              "args": [
                "self",
                "formula1",
                "formula2"
              ],
              "lineno": 310
            }
          ],
          "lineno": 54
        },
        "IntelligentRecommender": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "template_manager"
              ],
              "lineno": 320
            },
            {
              "name": "analyze_data_characteristics",
              "args": [
                "self",
                "data"
              ],
              "lineno": 331
            },
            {
              "name": "_analyze_column",
              "args": [
                "self",
                "series"
              ],
              "lineno": 346
            },
            {
              "name": "recommend_formulas",
              "args": [
                "self",
                "data_characteristics",
                "user_intent"
              ],
              "lineno": 377
            },
            {
              "name": "_get_numeric_recommendations",
              "args": [
                "self"
              ],
              "lineno": 411
            },
            {
              "name": "_get_date_recommendations",
              "args": [
                "self"
              ],
              "lineno": 419
            },
            {
              "name": "_get_financial_recommendations",
              "args": [
                "self"
              ],
              "lineno": 427
            },
            {
              "name": "_get_text_recommendations",
              "args": [
                "self"
              ],
              "lineno": 435
            },
            {
              "name": "get_recommendations",
              "args": [
                "self",
                "data_range",
                "user_intent",
                "context"
              ],
              "lineno": 443
            },
            {
              "name": "get_optimization_suggestions",
              "args": [
                "self",
                "formula",
                "data_context"
              ],
              "lineno": 490
            },
            {
              "name": "_get_intent_based_recommendations",
              "args": [
                "self",
                "user_intent"
              ],
              "lineno": 534
            },
            {
              "name": "_get_context_based_recommendations",
              "args": [
                "self",
                "context"
              ],
              "lineno": 561
            },
            {
              "name": "_deduplicate_recommendations",
              "args": [
                "self",
                "recommendations"
              ],
              "lineno": 590
            },
            {
              "name": "_get_performance_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 605
            },
            {
              "name": "_get_readability_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 631
            },
            {
              "name": "_get_functionality_suggestions",
              "args": [
                "self",
                "formula",
                "data_context"
              ],
              "lineno": 658
            },
            {
              "name": "_get_error_handling_suggestions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 676
            }
          ],
          "lineno": 317
        },
        "MultiWorkbookProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 698
            },
            {
              "name": "load_workbook",
              "args": [
                "self",
                "file_path",
                "alias"
              ],
              "lineno": 702
            },
            {
              "name": "analyze_cross_references",
              "args": [
                "self"
              ],
              "lineno": 727
            },
            {
              "name": "execute_cross_workbook_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 750
            },
            {
              "name": "_process_cross_references",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 793
            }
          ],
          "lineno": 695
        },
        "PerformanceAnalyzer": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 810
            },
            {
              "name": "analyze_formula_performance",
              "args": [
                "self",
                "formula",
                "execution_time",
                "memory_usage"
              ],
              "lineno": 818
            },
            {
              "name": "_calculate_complexity",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 858
            },
            {
              "name": "get_performance_report",
              "args": [
                "self"
              ],
              "lineno": 891
            },
            {
              "name": "_analyze_trends",
              "args": [
                "self",
                "executions"
              ],
              "lineno": 915
            },
            {
              "name": "analyze_formula_complexity",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 934
            }
          ],
          "lineno": 807
        },
        "FormulasSecurityManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 980
            },
            {
              "name": "validate_formula",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 995
            },
            {
              "name": "_calculate_nesting_level",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 1062
            },
            {
              "name": "_estimate_array_size",
              "args": [
                "self",
                "range_pattern"
              ],
              "lineno": 1076
            }
          ],
          "lineno": 977
        },
        "FormulasToolsManager": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1100
            },
            {
              "name": "_check_formulas_availability",
              "args": [
                "self"
              ],
              "lineno": 1109
            },
            {
              "name": "parse_formula",
              "args": [
                "self",
                "formula",
                "validate_security",
                "include_recommendations",
                "analyze_performance"
              ],
              "lineno": 1116
            },
            {
              "name": "_extract_functions",
              "args": [
                "self",
                "formula"
              ],
              "lineno": 1208
            },
            {
              "name": "_generate_optimization_recommendations",
              "args": [
                "self",
                "formula",
                "functions_used"
              ],
              "lineno": 1222
            },
            {
              "name": "compile_workbook",
              "args": [
                "self",
                "file_path",
                "output_format"
              ],
              "lineno": 1245
            },
            {
              "name": "execute_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 1349
            },
            {
              "name": "analyze_dependencies",
              "args": [
                "self",
                "file_path",
                "include_cross_references",
                "generate_visualization"
              ],
              "lineno": 1415
            },
            {
              "name": "_generate_visualization_data",
              "args": [
                "self",
                "dependencies",
                "formulas_info"
              ],
              "lineno": 1519
            },
            {
              "name": "validate_formula",
              "args": [
                "self",
                "formula",
                "context"
              ],
              "lineno": 1564
            },
            {
              "name": "batch_process_formulas",
              "args": [
                "self",
                "formulas",
                "operation",
                "context"
              ],
              "lineno": 1624
            },
            {
              "name": "get_formula_templates",
              "args": [
                "self",
                "category",
                "difficulty"
              ],
              "lineno": 1693
            },
            {
              "name": "get_intelligent_recommendations",
              "args": [
                "self",
                "context"
              ],
              "lineno": 1724
            }
          ],
          "lineno": 1097
        }
      },
      "functions": [
        {
          "name": "parse_excel_formula",
          "args": [
            "formula",
            "validate_security"
          ],
          "lineno": 1758
        },
        {
          "name": "compile_excel_workbook",
          "args": [
            "file_path",
            "output_format"
          ],
          "lineno": 1782
        },
        {
          "name": "execute_excel_formula",
          "args": [
            "formula",
            "context"
          ],
          "lineno": 1806
        },
        {
          "name": "analyze_excel_dependencies",
          "args": [
            "file_path"
          ],
          "lineno": 1840
        },
        {
          "name": "validate_excel_formula",
          "args": [
            "formula"
          ],
          "lineno": 1863
        },
        {
          "name": "batch_process_excel_formulas",
          "args": [
            "formulas_json",
            "operation"
          ],
          "lineno": 1887
        },
        {
          "name": "get_excel_formula_templates",
          "args": [
            "category",
            "difficulty"
          ],
          "lineno": 1922
        },
        {
          "name": "get_excel_formula_recommendations",
          "args": [
            "context_json"
          ],
          "lineno": 1949
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/formulas_tools.py"
    },
    "excel_data_quality_tools": {
      "classes": {
        "ExcelDataQualityController": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 48
            },
            {
              "name": "_initialize_quality_rules",
              "args": [
                "self"
              ],
              "lineno": 53
            },
            {
              "name": "_initialize_character_patterns",
              "args": [
                "self"
              ],
              "lineno": 77
            },
            {
              "name": "comprehensive_quality_check",
              "args": [
                "self",
                "file_path",
                "level"
              ],
              "lineno": 93
            },
            {
              "name": "validate_data_integrity",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "validation_rules"
              ],
              "lineno": 142
            },
            {
              "name": "_check_completeness",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 220
            },
            {
              "name": "_check_consistency",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 276
            },
            {
              "name": "_check_accuracy",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 320
            },
            {
              "name": "_check_uniqueness",
              "args": [
                "self",
                "df",
                "rules"
              ],
              "lineno": 385
            },
            {
              "name": "_summarize_validation_results",
              "args": [
                "self",
                "validation_result"
              ],
              "lineno": 430
            }
          ],
          "lineno": 45
        },
        "ExcelCellContentExtractor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 466
            },
            {
              "name": "_initialize_extraction_patterns",
              "args": [
                "self"
              ],
              "lineno": 469
            },
            {
              "name": "extract_cell_content_advanced",
              "args": [
                "self",
                "file_path",
                "cell_range",
                "sheet_name",
                "extract_type"
              ],
              "lineno": 488
            },
            {
              "name": "extract_cell_content",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "cell_range",
                "extraction_type",
                "clean_whitespace"
              ],
              "lineno": 512
            },
            {
              "name": "_extract_by_type",
              "args": [
                "self",
                "text",
                "extraction_type"
              ],
              "lineno": 624
            },
            {
              "name": "_get_cell_format_info",
              "args": [
                "self",
                "cell"
              ],
              "lineno": 655
            },
            {
              "name": "_generate_extraction_statistics",
              "args": [
                "self",
                "extracted_data"
              ],
              "lineno": 681
            }
          ],
          "lineno": 463
        },
        "ExcelCharacterConverter": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 718
            },
            {
              "name": "_initialize_conversion_rules",
              "args": [
                "self"
              ],
              "lineno": 721
            },
            {
              "name": "convert_character_formats",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "conversion_types",
                "target_columns",
                "save_backup"
              ],
              "lineno": 750
            },
            {
              "name": "_apply_conversion_rule",
              "args": [
                "self",
                "text",
                "conversion_type"
              ],
              "lineno": 886
            },
            {
              "name": "_convert_chinese_numbers",
              "args": [
                "self",
                "text"
              ],
              "lineno": 904
            },
            {
              "name": "_generate_output_path",
              "args": [
                "self",
                "original_path",
                "suffix"
              ],
              "lineno": 916
            },
            {
              "name": "_generate_conversion_statistics",
              "args": [
                "self",
                "original_df",
                "converted_df",
                "conversion_types"
              ],
              "lineno": 921
            },
            {
              "name": "batch_character_conversion",
              "args": [
                "self",
                "file_path",
                "conversion_rules",
                "output_path"
              ],
              "lineno": 947
            }
          ],
          "lineno": 715
        },
        "ExcelMultiConditionExtractor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1090
            },
            {
              "name": "extract_multi_condition_data",
              "args": [
                "self",
                "file_path",
                "conditions",
                "logic_operator",
                "sheet_name",
                "output_columns"
              ],
              "lineno": 1108
            },
            {
              "name": "_apply_condition",
              "args": [
                "self",
                "df",
                "column",
                "operator",
                "value"
              ],
              "lineno": 1234
            },
            {
              "name": "extract_with_multiple_conditions",
              "args": [
                "self",
                "file_path",
                "conditions",
                "sheet_name"
              ],
              "lineno": 1253
            },
            {
              "name": "cross_validate_data",
              "args": [
                "self",
                "file_path",
                "reference_file",
                "key_columns",
                "compare_columns",
                "tolerance"
              ],
              "lineno": 1341
            }
          ],
          "lineno": 1087
        },
        "ExcelMultiTableMerger": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1466
            },
            {
              "name": "merge_multiple_tables",
              "args": [
                "self",
                "table_configs",
                "merge_strategy",
                "key_columns",
                "output_file"
              ],
              "lineno": 1474
            },
            {
              "name": "_merge_dataframes",
              "args": [
                "self",
                "dataframes",
                "strategy",
                "key_columns"
              ],
              "lineno": 1581
            },
            {
              "name": "merge_multiple_excel_files",
              "args": [
                "self",
                "file_paths",
                "merge_config",
                "output_path"
              ],
              "lineno": 1633
            },
            {
              "name": "merge_with_conditions",
              "args": [
                "self",
                "primary_file",
                "secondary_files",
                "merge_conditions",
                "output_file"
              ],
              "lineno": 1706
            },
            {
              "name": "_merge_with_condition",
              "args": [
                "self",
                "primary_df",
                "secondary_df",
                "condition",
                "step_name"
              ],
              "lineno": 1783
            }
          ],
          "lineno": 1463
        },
        "ExcelDataCleaner": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 1830
            },
            {
              "name": "_initialize_cleaning_rules",
              "args": [
                "self"
              ],
              "lineno": 1833
            },
            {
              "name": "clean_excel_data",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "cleaning_config",
                "output_file"
              ],
              "lineno": 1864
            },
            {
              "name": "_clean_whitespace",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 1957
            },
            {
              "name": "_remove_duplicates",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 1988
            },
            {
              "name": "_handle_missing_values",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2005
            },
            {
              "name": "_handle_outliers",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2045
            },
            {
              "name": "_detect_outliers",
              "args": [
                "self",
                "series",
                "method",
                "threshold"
              ],
              "lineno": 2088
            },
            {
              "name": "_convert_data_types",
              "args": [
                "self",
                "df",
                "config"
              ],
              "lineno": 2106
            },
            {
              "name": "_generate_cleaning_summary",
              "args": [
                "self",
                "original_df",
                "cleaned_df",
                "steps"
              ],
              "lineno": 2158
            },
            {
              "name": "suggest_cleaning_operations",
              "args": [
                "self",
                "df"
              ],
              "lineno": 2182
            },
            {
              "name": "_get_missing_value_recommendation",
              "args": [
                "self",
                "missing_percentage"
              ],
              "lineno": 2313
            }
          ],
          "lineno": 1827
        },
        "ExcelBatchProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 2328
            },
            {
              "name": "batch_process_files",
              "args": [
                "self",
                "file_paths",
                "processing_config",
                "output_directory"
              ],
              "lineno": 2336
            },
            {
              "name": "_process_single_file",
              "args": [
                "self",
                "file_path",
                "config",
                "output_dir"
              ],
              "lineno": 2403
            },
            {
              "name": "_generate_batch_summary",
              "args": [
                "self",
                "batch_result"
              ],
              "lineno": 2485
            }
          ],
          "lineno": 2325
        }
      },
      "functions": [],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_data_quality_tools.py"
    },
    "excel_helper": {
      "classes": {},
      "functions": [
        {
          "name": "_suggest_excel_read_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 6
        },
        {
          "name": "_fallback_suggest_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 39
        },
        {
          "name": "detect_excel_structure",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 124
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_helper.py"
    },
    "excel_smart_tools": {
      "classes": {},
      "functions": [
        {
          "name": "suggest_excel_read_parameters",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 4
        },
        {
          "name": "detect_excel_file_structure",
          "args": [
            "file_path",
            "sheet_name"
          ],
          "lineno": 24
        },
        {
          "name": "create_excel_read_template",
          "args": [
            "file_path",
            "sheet_name",
            "skiprows",
            "header",
            "usecols"
          ],
          "lineno": 43
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_smart_tools.py"
    },
    "enhanced_excel_helper": {
      "classes": {
        "EncodingCache": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "cache_dir",
                "max_cache_size_mb",
                "config_file"
              ],
              "lineno": 22
            },
            {
              "name": "_load_config",
              "args": [
                "self",
                "config_file"
              ],
              "lineno": 58
            },
            {
              "name": "_merge_config",
              "args": [
                "self",
                "default",
                "user"
              ],
              "lineno": 92
            },
            {
              "name": "_load_cache",
              "args": [
                "self"
              ],
              "lineno": 100
            },
            {
              "name": "_save_cache",
              "args": [
                "self"
              ],
              "lineno": 110
            },
            {
              "name": "_get_file_hash",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 118
            },
            {
              "name": "get",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 128
            },
            {
              "name": "set",
              "args": [
                "self",
                "file_path",
                "encoding"
              ],
              "lineno": 141
            },
            {
              "name": "_cleanup_expired_cache",
              "args": [
                "self"
              ],
              "lineno": 160
            },
            {
              "name": "_monitor_cache_size",
              "args": [
                "self"
              ],
              "lineno": 184
            },
            {
              "name": "_reduce_cache_size",
              "args": [
                "self"
              ],
              "lineno": 206
            },
            {
              "name": "create_backup",
              "args": [
                "self"
              ],
              "lineno": 227
            },
            {
              "name": "restore_from_backup",
              "args": [
                "self"
              ],
              "lineno": 244
            },
            {
              "name": "get_cache_stats",
              "args": [
                "self"
              ],
              "lineno": 263
            }
          ],
          "lineno": 19
        }
      },
      "functions": [
        {
          "name": "detect_file_encoding",
          "args": [
            "file_path",
            "use_cache"
          ],
          "lineno": 296
        },
        {
          "name": "smart_read_excel",
          "args": [
            "file_path",
            "sheet_name",
            "encoding",
            "auto_detect_params"
          ],
          "lineno": 386
        },
        {
          "name": "validate_excel_data_integrity",
          "args": [
            "original_file",
            "processed_data",
            "sheet_name"
          ],
          "lineno": 536
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/enhanced_excel_helper.py"
    },
    "comprehensive_data_verification": {
      "classes": {
        "ComprehensiveDataVerifier": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 24
            },
            {
              "name": "comprehensive_excel_verification",
              "args": [
                "self",
                "file_path",
                "reference_file",
                "verification_level",
                "save_report"
              ],
              "lineno": 28
            },
            {
              "name": "_analyze_file_structure",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 126
            },
            {
              "name": "_verify_data_integrity",
              "args": [
                "self",
                "file_path",
                "level"
              ],
              "lineno": 177
            },
            {
              "name": "_compare_with_reference",
              "args": [
                "self",
                "file_path",
                "reference_file"
              ],
              "lineno": 262
            },
            {
              "name": "_detect_anomalies",
              "args": [
                "self",
                "df"
              ],
              "lineno": 294
            },
            {
              "name": "_calculate_data_quality_score",
              "args": [
                "self",
                "file_analysis",
                "integrity_results",
                "comparison_results"
              ],
              "lineno": 335
            },
            {
              "name": "_generate_detailed_report",
              "args": [
                "self",
                "file_path",
                "file_analysis",
                "integrity_results"
              ],
              "lineno": 379
            },
            {
              "name": "_generate_comprehensive_recommendations",
              "args": [
                "self",
                "file_analysis",
                "integrity_results",
                "comparison_results"
              ],
              "lineno": 422
            },
            {
              "name": "_determine_overall_status",
              "args": [
                "self",
                "quality_score",
                "integrity_results"
              ],
              "lineno": 461
            },
            {
              "name": "_save_verification_report",
              "args": [
                "self",
                "verification_result"
              ],
              "lineno": 477
            }
          ],
          "lineno": 21
        }
      },
      "functions": [],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/comprehensive_data_verification.py"
    },
    "data_verification": {
      "classes": {
        "DataVerificationEngine": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self"
              ],
              "lineno": 19
            },
            {
              "name": "compare_dataframes",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2",
                "key_columns"
              ],
              "lineno": 23
            },
            {
              "name": "_analyze_structural_differences",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2"
              ],
              "lineno": 94
            },
            {
              "name": "_analyze_content_differences",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2",
                "key_columns"
              ],
              "lineno": 137
            },
            {
              "name": "_compare_by_key_columns",
              "args": [
                "self",
                "df1",
                "df2",
                "key_columns",
                "common_cols"
              ],
              "lineno": 174
            },
            {
              "name": "_compare_by_index",
              "args": [
                "self",
                "df1",
                "df2",
                "common_cols"
              ],
              "lineno": 225
            },
            {
              "name": "_compare_statistics",
              "args": [
                "self",
                "df1",
                "df2",
                "name1",
                "name2"
              ],
              "lineno": 274
            },
            {
              "name": "_calculate_match_score",
              "args": [
                "self",
                "structural_diff",
                "content_diff",
                "stats_comparison"
              ],
              "lineno": 359
            },
            {
              "name": "_generate_recommendations",
              "args": [
                "self",
                "comparison_result"
              ],
              "lineno": 405
            }
          ],
          "lineno": 16
        }
      },
      "functions": [
        {
          "name": "verify_data_processing_result",
          "args": [
            "original_data",
            "processed_data",
            "processing_description",
            "key_columns"
          ],
          "lineno": 436
        },
        {
          "name": "_assess_completeness",
          "args": [
            "original_df",
            "processed_df"
          ],
          "lineno": 518
        },
        {
          "name": "_assess_consistency",
          "args": [
            "df"
          ],
          "lineno": 527
        },
        {
          "name": "_assess_accuracy",
          "args": [
            "comparison"
          ],
          "lineno": 535
        },
        {
          "name": "_assess_validity",
          "args": [
            "df"
          ],
          "lineno": 543
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/data_verification.py"
    },
    "excel_enhanced_tools": {
      "classes": {
        "ExcelEnhancedProcessor": {
          "methods": [
            {
              "name": "__init__",
              "args": [
                "self",
                "use_go_service",
                "fallback_to_pandas"
              ],
              "lineno": 24
            },
            {
              "name": "_should_use_go_service",
              "args": [
                "self",
                "file_path"
              ],
              "lineno": 50
            },
            {
              "name": "_get_server_functions",
              "args": [
                "self"
              ],
              "lineno": 66
            },
            {
              "name": "read_excel_enhanced",
              "args": [
                "self",
                "file_path",
                "sheet_name",
                "start_row",
                "end_row",
                "start_col",
                "end_col",
                "use_go"
              ],
              "lineno": 87
            },
            {
              "name": "write_excel_enhanced",
              "args": [
                "self",
                "file_path",
                "data",
                "sheet_name",
                "start_row",
                "start_col",
                "use_go"
              ],
              "lineno": 249
            },
            {
              "name": "create_chart_enhanced",
              "args": [
                "self",
                "file_path",
                "chart_type",
                "data_range",
                "chart_title",
                "sheet_name",
                "x_axis_title",
                "y_axis_title",
                "use_go"
              ],
              "lineno": 367
            },
            {
              "name": "get_file_info_enhanced",
              "args": [
                "self",
                "file_path",
                "use_go"
              ],
              "lineno": 448
            }
          ],
          "lineno": 21
        }
      },
      "functions": [
        {
          "name": "get_excel_processor",
          "args": [
            "use_go_service",
            "fallback_to_pandas"
          ],
          "lineno": 631
        },
        {
          "name": "read_excel_enhanced",
          "args": [
            "file_path"
          ],
          "lineno": 649
        },
        {
          "name": "write_excel_enhanced",
          "args": [
            "file_path",
            "data"
          ],
          "lineno": 654
        },
        {
          "name": "create_chart_enhanced",
          "args": [
            "file_path",
            "chart_type",
            "data_range"
          ],
          "lineno": 659
        },
        {
          "name": "get_file_info_enhanced",
          "args": [
            "file_path"
          ],
          "lineno": 664
        }
      ],
      "path": "/Users/wangdada/Downloads/mcp/chatExcel-mcp/excel_enhanced_tools.py"
    }
  },
  "issues": {
    "all": [],
    "by_tool": {},
    "by_severity": {
      "critical": [],
      "high": [],
      "medium": []
    }
  },
  "recommendations": []
}